<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="GlobalSearchFanart">
		<value condition="Control.HasFocus(111) + !IsEmpty(Container(111).ListItem.Property(Fanart))">$INFO[Container(111).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(211) + !IsEmpty(Container(211).ListItem.Property(Fanart))">$INFO[Container(211).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(121) + !IsEmpty(Container(121).ListItem.Property(Fanart))">$INFO[Container(121).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(131) + !IsEmpty(Container(131).ListItem.Property(Fanart))">$INFO[Container(131).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(141) + !IsEmpty(Container(141).ListItem.Property(Fanart))">$INFO[Container(141).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(151) + !IsEmpty(Container(151).ListItem.Property(Fanart))">$INFO[Container(151).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(161) + !IsEmpty(Container(161).ListItem.Property(Fanart))">$INFO[Container(161).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(171) + !IsEmpty(Container(171).ListItem.Property(Fanart))">$INFO[Container(171).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(181) + !IsEmpty(Container(181).ListItem.Property(Fanart))">$INFO[Container(181).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(221) + !IsEmpty(Container(221).ListItem.Property(Fanart))">$INFO[Container(221).ListItem.Property(Fanart)]</value>
	</variable>
	
	<variable name="CustomVideosBGVar">
		<value condition="Skin.String(CustomVideosBGType,2) | Skin.String(CustomVideosBGType,3)">$INFO[Skin.String(CustomVideosBGPath)]</value>
		<value condition="Skin.String(CustomVideosBGType,4) + [Skin.String(CustomVideosFanartBGType,random) | Skin.String(CustomVideosFanartBGType,)]">$INFO[Window(Home).Property(SkinHelper.AllVideosBackground)]</value>
		<value condition="Skin.String(CustomVideosBGType,4) + Skin.String(CustomVideosFanartBGType,recent)">$INFO[Window(Home).Property(SkinHelper.RecentVideosBackground)]</value>
		<value condition="Skin.String(CustomVideosBGType,4) + Skin.String(CustomVideosFanartBGType,inprogress)">$INFO[Window(Home).Property(SkinHelper.InProgressVideosBackground)]</value>
	</variable>
	
	<variable name="CustomMoviesBGVar">
		<value condition="Skin.String(CustomMoviesBGType,2) | Skin.String(CustomMoviesBGType,3)">$INFO[Skin.String(CustomMoviesBGPath)]</value>
		<value condition="Skin.String(CustomMoviesBGType,4) + [Skin.String(CustomMoviesFanartBGType,random) | Skin.String(CustomMoviesFanartBGType,)]">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</value>
		<value condition="Skin.String(CustomMoviesBGType,4) + Skin.String(CustomMoviesFanartBGType,recent)">$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground)]</value>
		<value condition="Skin.String(CustomMoviesBGType,4) + Skin.String(CustomMoviesFanartBGType,inprogress)">$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</value>
		<value condition="Skin.String(CustomMoviesBGType,4) + Skin.String(CustomMoviesFanartBGType,unwatched)">$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</value>
	</variable>
	
	<variable name="CustomTVShowsBGVar">
		<value condition="Skin.String(CustomTVShowsBGType,2) | Skin.String(CustomTVShowsBGType,3)">$INFO[Skin.String(CustomTVShowsBGPath)]</value>
		<value condition="Skin.String(CustomTVShowsBGType,4) + [Skin.String(CustomTVShowsFanartBGType,random) | Skin.String(CustomTVShowsFanartBGType,)]">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</value>
		<value condition="Skin.String(CustomTVShowsBGType,4) + Skin.String(CustomTVShowsFanartBGType,recent)">$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</value>
		<value condition="Skin.String(CustomTVShowsBGType,4) + Skin.String(CustomTVShowsFanartBGType,inprogress)">$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</value>
	</variable>
	
	<variable name="CustomMusicBGVar">
		<value condition="Skin.String(CustomMusicBGType,2) | Skin.String(CustomMusicBGType,3)">$INFO[Skin.String(CustomMusicBGPath)]</value>
		<value condition="Skin.String(CustomMusicBGType,4) + [Skin.String(CustomMusicFanartBGType,random) | Skin.String(CustomMusicFanartBGType,)]">$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</value>
		<value condition="Skin.String(CustomMusicBGType,4) + Skin.String(CustomMusicFanartBGType,recent)">$INFO[Window(Home).Property(SkinHelper.RecentMusicBackground)]</value>
	</variable>
	
	<include name="BackgroundLoginScreen">
		<control type="image">
			<include>BackgroundSize</include>
			<texture>background-default.png</texture>
			<aspectratio>scale</aspectratio>
			<fadetime>BackgroundCrossfadeTime</fadetime>
			<include>BackgroundVisibleAnim</include>
		</control>
	</include>
	
	<include name="BackgroundWeather">		
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<include condition="Skin.String(CustomWeatherBGType,2) | Skin.String(CustomWeatherBGType,3)">WeatherCustomBGPath</include>
				<include condition="Skin.String(CustomWeatherBGType,4)">WeatherConditionBGPath</include>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">CustomBackgroundAnim</include>
			</control>

			<include>WeatherBackgroundDim</include>
		</control>
	</include>
	
	<include name="BackgroundDefault">		
		<control type="group">
			<control type="multiimage">
				<include>BackgroundSize</include>
				<imagepath fallback="background-default.png">$INFO[Skin.String(CustomDefaultBGPath)]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
			</control>

			<control type="image">
				<include>BackgroundDim</include>
				<animation effect="fade" end="50" reversible="false" condition="!Skin.HasSetting(DefaultBackgroundBrightnessHigh)">Conditional</animation>
				<animation effect="fade" end="75" reversible="false" condition="Skin.HasSetting(DefaultBackgroundBrightnessHigh)">Conditional</animation>
			</control>
		</control>
	</include>

	<include name="BackgroundHome">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<include>BackgroundSize</include>
				<imagepath fallback="background-default.png">$INFO[Skin.String(CustomDefaultBGPath)]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<visible>IsEmpty(Container(850).ListItem.Thumb)</visible>
				<animation effect="fade" start="100" end="0" time="600">Hidden</animation>
			</control>

			<control type="group">		
				<control type="multiimage">
					<include>BackgroundSize</include>
					<imagepath fallback=".">$INFO[Container(850).ListItem.Thumb]</imagepath>
					<aspectratio>scale</aspectratio>
					<timeperimage>10000</timeperimage>
					<fadetime>BackgroundCrossfadeTime</fadetime>
					<randomize>true</randomize>
					<include condition="Skin.HasSetting(AnimateBackground)">CustomBackgroundAnim</include>
				</control>
			</control>
		</control>
	</include>

	<include name="BackgroundMusic">	
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$VAR[CustomMusicBGVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">CustomBackgroundAnim</include>
			</control>

			<include condition="Skin.String(CustomMusicBGType,2) | Skin.String(CustomMusicBGType,3) | Skin.String(CustomMusicBGType,4)">MusicBackgroundDim</include>
		</control>
	</include>

	<include name="BackgroundVideos">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG) | [System.HasAddon(script.tvtunes) + IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))]]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$VAR[CustomVideosBGVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">CustomBackgroundAnim</include>
			</control>

			<include condition="Skin.String(CustomVideosBGType,2) | Skin.String(CustomVideosBGType,3) | Skin.String(CustomVideosBGType,4)">VideosBackgroundDim</include>
		</control>
	</include>

	<include name="BackgroundMovies">		
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG) | [System.HasAddon(script.tvtunes) + IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))]]">IsMediaPlayingCondition</include>
			<visible>Container.Content(Movies) | Container.Content(Sets) | Window.IsActive(script-videoextras-main.xml)</visible>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$VAR[CustomMoviesBGVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">CustomBackgroundAnim</include>
			</control>

			<include condition="Skin.String(CustomMoviesBGType,2) | Skin.String(CustomMoviesBGType,3) | Skin.String(CustomMoviesBGType,4)">MoviesBackgroundDim</include>
		</control>
	</include>	

	<include name="BackgroundTVShows">		
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG) | [System.HasAddon(script.tvtunes) + IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))]]">IsMediaPlayingCondition</include>
			<visible>Container.Content(TVShows) | Container.Content(Episodes) | Window.IsActive(script-videoextras-main.xml)</visible>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$VAR[CustomTVShowsBGVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">CustomBackgroundAnim</include>
			</control>

			<include condition="Skin.String(CustomTVShowsBGType,2) | Skin.String(CustomTVShowsBGType,3) | Skin.String(CustomTVShowsBGType,4)">TVShowsBackgroundDim</include>
		</control>
	</include>

	<include name="BackgroundPrograms">	
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$INFO[Skin.String(CustomProgramsBGPath)]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">CustomBackgroundAnim</include>
			</control>

			<include>ProgramsBackgroundDim</include>
		</control>
	</include>

	<include name="BackgroundPictures">		
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$INFO[Skin.String(CustomPicturesBGPath)]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">CustomBackgroundAnim</include>
				<visible>Skin.String(CustomPicturesBGType,2) | Skin.String(CustomPicturesBGType,3)</visible>
			</control>
			
			<control type="image">
				<description>Latest / Random Background</description>
				<include>BackgroundSize</include>
				<texture>$INFO[Control.GetLabel(4165)]</texture>
				<aspectratio>scale</aspectratio>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<include condition="Skin.HasSetting(AnimateBackground)">CustomBackgroundAnim</include>
				<visible>System.HasAddon(plugin.image.mypicsdb) + [Skin.String(CustomPicturesBGType,4) | Skin.String(CustomPicturesBGType,5)]</visible>
			</control>

			<include>PicturesBackgroundDim</include>
		</control>
	</include>

	<include name="BackgroundSystem">	
		<control type="group">
			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$INFO[Skin.String(CustomSystemBGPath)]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">CustomBackgroundAnim</include>
			</control>

			<include>SystemBackgroundDim</include>
		</control>
	</include>
	
	<include name="BackgroundPVR">		
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<include condition="Skin.String(CustomPVRBGType,2) | Skin.String(CustomPVRBGType,3)">PVRCustomBGPath</include>
				<include condition="Skin.String(CustomPVRBGType,4) + System.HasAddon(script.skin.helper.service)">PVRFanartBGPath</include>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">CustomBackgroundAnim</include>
			</control>

			<include>PVRBackgroundDim</include>
		</control>
	</include>

	<include name="BackgroundMusicPlaying">
		<control type="group">
			<visible>Player.HasAudio</visible>
			<include condition="System.HasAddon(script.tvtunes)">TVTunesDisableVizCond</include>
			<include>BackgroundVisibleAnim</include>
			
			<include condition="[[Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + !Skin.HasSetting(EnableArtistFanartSlideshow)]
			| [[Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + !System.HasAddon(script.artistslideshow)]">MusicPlayingArtistFanart</include>
			<include condition="System.HasAddon(script.artistslideshow) + [Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + Skin.HasSetting(EnableArtistFanartSlideshow)">MusicPlayingArtistFanartSlideshow</include>
			<include condition="![Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + !Window.IsActive(Home)">MediaPlayingVizDim</include>
			<include condition="[Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + !Window.IsActive(Home)">MediaPlayingFanartDim</include>
			
			<control type="visualisation">
				<description>Visualization</description>
				<include>BackgroundSize</include>
				<visible>!Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)</visible>
			</control>
		</control>
	</include>

	<include name="BackgroundVideoPlaying">
		<control type="group">
			<visible>Player.HasVideo</visible>
			<include>BackgroundVisibleAnim</include>

			<control type="videowindow">
				<description>Video</description>
				<include>BackgroundSize</include>
			</control>

			<include condition="!Window.IsActive(Home)">MediaPlayingVizDim</include>
		</control>
	</include>

	<include name="BackgroundVideoFanart">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG) | [Player.HasAudio + Window.IsActive(MovieInformation)] | [System.HasAddon(script.tvtunes) + IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))]]">IsMediaPlayingCondition</include>

			<control type="group">
				<visible>Container.Content(Movies) | Container.Content(Sets) | [Skin.String(CurrentViewMode,585) + [Substring(Container.FolderPath,videodb://movies/genres/) | Substring(Container.FolderPath,videodb://movies/years/) | Substring(Container.FolderPath,videodb://movies/actors/) | Substring(Container.FolderPath,videodb://movies/directors/) | Substring(Container.FolderPath,videodb://movies/studios/) | Substring(Container.FolderPath,videodb://movies/countries/)]]</visible>
				<visible>Window.IsActive(MovieInformation) | Window.IsActive(script-videoextras-main.xml)
				| [Control.IsVisible(50) + Skin.HasSetting(ShowMoviesIconFanart)]
				| [Control.IsVisible(54) + Skin.HasSetting(ShowMoviesThumbnailFanart)]
				| [Control.IsVisible(52) + !Skin.HasSetting(HideMoviesListFanart)] 
				| [Control.IsVisible(53) + !Skin.HasSetting(HideMoviesWrapListInfoFanart)] 
				| [Control.IsVisible(58) + !Skin.HasSetting(HideMoviesListInfoFanart)]
				| [Control.IsVisible(66) + !Skin.HasSetting(HideMoviesListInfo2Fanart)]
				| [Control.IsVisible(95) + !Skin.HasSetting(HideMoviesListInfo3Fanart)]
				| [Control.IsVisible(97) + !Skin.HasSetting(HideMoviesThumbsInfoFanart)]
				| [Control.IsVisible(75) + !Skin.HasSetting(HideMoviesWideListFanart)]
				| [Control.IsVisible(583) + !Skin.HasSetting(HideMoviesFanartFanart)]
				| [Control.IsVisible(585) + !Skin.HasSetting(HideMoviesExtendedListFanart)]
				| [Control.IsVisible(588) + !Skin.HasSetting(HideMovies3DWrapFanart)]
				| Control.IsVisible(59)</visible>
				<include>BackgroundVisibleAnim</include>
				<include>FanartImage</include>
				<include condition="Skin.HasSetting(EnableMoviesExtraFanart)">ExtraFanartImage</include>
				<include>FanartDim</include>
			</control>
			
			<control type="group">
				<visible>Container.Content(MusicVideos) | [Skin.String(CurrentViewMode,585) + [Substring(Container.FolderPath,videodb://musicvideos/genres/) | Substring(Container.FolderPath,videodb://musicvideos/years/) | Substring(Container.FolderPath,videodb://musicvideos/directors/) | Substring(Container.FolderPath,videodb://musicvideos/studios/)]]</visible>
				<visible>Window.IsActive(MovieInformation) | Window.IsActive(script-videoextras-main.xml)
				| [Control.IsVisible(50) + Skin.HasSetting(ShowMusicVideosIconFanart)]
				| [Control.IsVisible(587) + !Skin.HasSetting(HideMusicVideosListInfo2Fanart)]
				| [Control.IsVisible(585) + !Skin.HasSetting(HideMusicVideosExtendedListFanart)]
				| [Control.IsVisible(52) + !Skin.HasSetting(HideMusicVideosListFanart)]</visible>
				<include>BackgroundVisibleAnim</include>
				<include>FanartImage</include>
				<include condition="Skin.HasSetting(EnableMusicVideosExtraFanart)">ExtraFanartImage</include>
				<include condition="Skin.HasSetting(EnableMusicVideosExtraFanart)">ExtraFanartImage2</include>
				<include condition="Skin.HasSetting(EnableMusicVideosExtraFanart)">ExtraFanartImage3</include>
				<include>FanartDim</include>
			</control>

			<control type="group">
				<visible>Window.IsActive(MovieInformation) | Window.IsActive(script-videoextras-main.xml)
				| [Control.IsVisible(50) + Skin.HasSetting(ShowTVShowsIconFanart)]
				| [Control.IsVisible(54) + Skin.HasSetting(ShowTVShowsThumbnailFanart)]
				| [Control.IsVisible(56) + !Skin.HasSetting(HideTVShowsWideIconFanart)] 
				| [Control.IsVisible(52) + !Skin.HasSetting(HideTVShowsListFanart)] 
				| [Control.IsVisible(76) + !Skin.HasSetting(HideTVShowsWideListFanart)]
				| [Control.IsVisible(61) + !Skin.HasSetting(HideTVShowsListInfoFanart)]
				| [Control.IsVisible(65) + !Skin.HasSetting(HideTVShowsListInfo2Fanart)]
				| [Control.IsVisible(100) + !Skin.HasSetting(HideTVShowsThumbsInfoFanart)]
				| [Control.IsVisible(73) + !Skin.HasSetting(HideEpisodesListInfoFanart)]
				| [Control.IsVisible(68) + !Skin.HasSetting(HideEpisodesListInfo2Fanart)]
				| [Control.IsVisible(94) + !Skin.HasSetting(HideEpisodesListInfo3Fanart)]
				| [Control.IsVisible(583) + !Skin.HasSetting(HideTVShowsFanartFanart)]
				| [Control.IsVisible(585) + !Skin.HasSetting(HideTVShowsExtendedListFanart)]
				| [Control.IsVisible(588) + !Skin.HasSetting(HideTVShows3DWrapFanart)]
				| [Control.IsVisible(74) + !Skin.HasSetting(HideEpisodesWideListFanart)]
				| [Control.IsVisible(589) + !Skin.HasSetting(HideTVShowsListInfo3Fanart)]</visible>
				<control type="group">
					<visible>Container.Content(TVShows) | Window.IsActive(script-videoextras-main.xml) | [Skin.String(CurrentViewMode,585) + [Substring(Container.FolderPath,videodb://tvshows/genres/) | Substring(Container.FolderPath,videodb://tvshows/years/) | Substring(Container.FolderPath,videodb://tvshows/actors/) | Substring(Container.FolderPath,videodb://tvshows/studios/)]]</visible>
					<include>BackgroundVisibleAnim</include>
					<include>FanartImage</include>
					<include condition="Skin.HasSetting(EnableTVShowsExtraFanart)">ExtraFanartImage</include>
					<include condition="Skin.HasSetting(EnableTVShowsExtraFanart)">ExtraFanartImage2</include>
					<include condition="Skin.HasSetting(EnableTVShowsExtraFanart)">ExtraFanartImage3</include>
					<include>FanartDim</include>		
				</control>
				<control type="group">
					<visible>Container.Content(Episodes) | Container.Content(Seasons) | Window.IsActive(script-videoextras-main.xml)</visible>
					<include>BackgroundVisibleAnim</include>
					<include>FanartImage</include>
					<include>ParentFanartImage</include>
					<include condition="Skin.HasSetting(EnableTVShowsExtraFanart)">ExtraFanartImage</include>
					<include condition="Skin.HasSetting(EnableTVShowsExtraFanart)">ExtraFanartImage2</include>
					<include condition="Skin.HasSetting(EnableTVShowsExtraFanart)">ExtraFanartImage3</include>
					<include>FanartDim</include>		
				</control>
			</control>
		</control>
	</include>

	<include name="BackgroundMusicFanart">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<visible>Container.Content(Albums) | Container.Content(Songs) | Container.Content(Artists) | [Skin.String(CurrentViewMode,585) + [Substring(Container.FolderPath,musicdb://genres/) | Substring(Container.FolderPath,musicdb://years/)]]</visible>
			<visible>Window.IsActive(MusicInformation)
			| [Control.IsVisible(50) + Skin.HasSetting(ShowMusicIconFanart)]
			| [Control.IsVisible(63) + Skin.HasSetting(ShowMusicThumbnailFanart)]
			| [Control.IsVisible(52) + !Skin.HasSetting(HideMusicListFanart)] 
			| [Control.IsVisible(62) + !Skin.HasSetting(HideMusicListInfoFanart)]
			| [[Control.IsVisible(67) | Control.IsVisible(72)] + !Skin.HasSetting(HideMusicListInfo2Fanart)]
			| [Control.IsVisible(96) + !Skin.HasSetting(HideMusicListInfo3Fanart)]
			| [Control.IsVisible(64) + !Skin.HasSetting(HideMusicWrapListInfoFanart)]
			| [Control.IsVisible(77) + !Skin.HasSetting(HideMusicWideListFanart)]
			| [Control.IsVisible(585) + !Skin.HasSetting(HideMusicExtendedListFanart)]
			| [Control.IsVisible(599) + !Skin.HasSetting(HideMusicThumbsInfoFanart)]</visible>
			<include>BackgroundVisibleAnim</include>
			<include>FanartImage</include>
			<include>FanartDim</include>
		</control>
	</include>

	<include name="BackgroundAddonsFanart">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<visible>Container.Content(Addons)</visible>
			<visible>Window.IsActive(AddonInformation)
			| [Control.IsVisible(50) + Skin.HasSetting(ShowAddonsIconFanart)]
			| [Control.IsVisible(63) + Skin.HasSetting(ShowAddonsThumbnailFanart)]
			| [Control.IsVisible(52) + !Skin.HasSetting(HideAddonsListFanart)] 
			| [Control.IsVisible(90) + !Skin.HasSetting(HideAddonsWideListFanart)]
			| [Control.IsVisible(91) + !Skin.HasSetting(HideAddonsListInfoFanart)]
			| [Control.IsVisible(93) + !Skin.HasSetting(HideAddonsWrapListInfoFanart)]
			</visible> 
			<include>BackgroundVisibleAnim</include>
			<include>FanartImage</include>
			<include>FanartDim</include>
		</control>
	</include>

	<include name="BackgroundProgramsFanart">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<visible>Substring(Container.FolderPath,plugin://plugin.program)</visible>
			<visible>Window.IsActive(1122)
			| [Control.IsVisible(590) + !Skin.HasSetting(HideProgramsListInfoFanart)]
			| [Control.IsVisible(591) + !Skin.HasSetting(HideProgramsListInfo2Fanart)]
			| [Control.IsVisible(592) + !Skin.HasSetting(HideProgramsListInfo3Fanart)]
			| [Control.IsVisible(593) + !Skin.HasSetting(HideProgramsThumbsInfoFanart)]
			| [Control.IsVisible(594) + !Skin.HasSetting(HideProgramsThumbsInfo2Fanart)]
			| [Control.IsVisible(595) + !Skin.HasSetting(HideProgramsThumbsInfo3Fanart)]
			| [Control.IsVisible(596) + !Skin.HasSetting(HideProgramsWrapListInfoFanart)]
			| [Control.IsVisible(597) + !Skin.HasSetting(HideProgramsWrapListInfo2Fanart)]
			| [Control.IsVisible(598) + !Skin.HasSetting(HideProgramsWrapListInfo3Fanart)]</visible>			
			<include>BackgroundVisibleAnim</include>
			<include>FanartImage</include>
			<include>FanartDim</include>
		</control>
	</include>
	
	<include name="BackgroundGlobalSearch">	
		<control type="group">
			<control type="image">
				<description>Fanart Background</description>
				<include>BackgroundSize</include>
				<texture background="true">$VAR[GlobalSearchFanart]</texture>
				<aspectratio>scale</aspectratio>
				<fadetime>BackgroundCrossfadeTime</fadetime>
			</control>

			<control type="image">
				<include>BackgroundDim</include>
				<animation effect="fade" end="80" reversible="false" condition="true">Conditional</animation>
			</control>
		</control>
	</include>

	<include name="FanartImage">
		<control type="image">
			<include>BackgroundSize</include>
			<texture background="true">$VAR[FanartImageVar]</texture>
			<aspectratio>scale</aspectratio>
			<fadetime>FanartCrossfadeTime</fadetime>
			<include condition="Skin.HasSetting(AnimateFanart)">FanartBackgroundAnim</include>
			<visible>!IsEmpty(ListItem.Art(fanart)) | !IsEmpty(Container(584).ListItem.Art(fanart))</visible>
		</control>
	</include>

	<include name="ParentFanartImage">
		<control type="image">
			<include>BackgroundSize</include>
			<texture background="true">$INFO[Fanart.Image]</texture>
			<aspectratio>scale</aspectratio>
			<fadetime>FanartCrossfadeTime</fadetime>
			<include condition="Skin.HasSetting(AnimateFanart)">FanartBackgroundAnim</include>
			<visible>!IsEmpty(Fanart.Image)</visible>
		</control>
	</include>

	<include name="ExtraFanartImage">
		<control type="multiimage">
			<include>BackgroundSize</include>
			<imagepath background="true">$VAR[ExtraFanartImageVar]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<include condition="Skin.HasSetting(AnimateFanart)">FanartBackgroundAnim</include>
		</control>
	</include>

	<include name="ExtraFanartImage2">
		<control type="multiimage">
			<include>BackgroundSize</include>
			<imagepath background="true">$VAR[ExtraFanartImage2Var]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<include condition="Skin.HasSetting(AnimateFanart)">FanartBackgroundAnim</include>
		</control>
	</include>

	<include name="ExtraFanartImage3">
		<control type="multiimage">
			<include>BackgroundSize</include>
			<imagepath background="true">$VAR[ExtraFanartImage3Var]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<include condition="Skin.HasSetting(AnimateFanart)">FanartBackgroundAnim</include>
		</control>
	</include>

	<include name="BackgroundDim">
		<include>BackgroundSize</include>
		<texture>views/fanart-dim.png</texture>
	</include>

	<include name="MediaPlayingVizDim">
		<control type="image">
			<include>BackgroundDim</include>
		</control>
	</include>

	<include name="MediaPlayingFanartDim">
		<control type="image">
			<include>BackgroundDim</include>
			<visible>!IsEmpty(Player.Art(fanart))</visible>
			<animation effect="fade" end="70" reversible="false" condition="Skin.HasSetting(FanartBackgroundBrightnessHigh)">Conditional</animation>
		</control>
	</include>

	<include name="FanartDim">
		<control type="image">
			<include>BackgroundDim</include>
			<visible>!IsEmpty(ListItem.Art(fanart)) | !IsEmpty(Container(584).ListItem.Art(fanart))</visible>
			<animation effect="fade" end="70" reversible="false" condition="Skin.HasSetting(FanartBackgroundBrightnessHigh)">Conditional</animation>
		</control>
	</include>

	<include name="MusicBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<animation effect="fade" end="70" reversible="false" condition="Skin.HasSetting(MusicBackgroundBrightnessHigh)">Conditional</animation>
		</control>
	</include>

	<include name="VideosBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<animation effect="fade" end="70" reversible="false" condition="Skin.HasSetting(VideosBackgroundBrightnessHigh)">Conditional</animation>
		</control>
	</include>

	<include name="MoviesBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<animation effect="fade" end="70" reversible="false" condition="Skin.HasSetting(MoviesBackgroundBrightnessHigh)">Conditional</animation>
		</control>
	</include>

	<include name="TVShowsBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<animation effect="fade" end="70" reversible="false" condition="Skin.HasSetting(TVShowsBackgroundBrightnessHigh)">Conditional</animation>
		</control>
	</include>

	<include name="ProgramsBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<animation effect="fade" end="70" reversible="false" condition="Skin.HasSetting(ProgramsBackgroundBrightnessHigh)">Conditional</animation>
		</control>
	</include>

	<include name="PicturesBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<animation effect="fade" end="70" reversible="false" condition="Skin.HasSetting(PicturesBackgroundBrightnessHigh)">Conditional</animation>
		</control>
	</include>
	
	<include name="SystemBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<animation effect="fade" end="70" reversible="false" condition="Skin.HasSetting(SystemBackgroundBrightnessHigh)">Conditional</animation>
		</control>
	</include>
	
	<include name="WeatherBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<animation effect="fade" end="70" reversible="false" condition="Skin.HasSetting(WeatherBackgroundBrightnessHigh)">Conditional</animation>
		</control>
	</include>

	<include name="PVRBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<animation effect="fade" end="70" reversible="false" condition="Skin.HasSetting(PVRBackgroundBrightnessHigh)">Conditional</animation>
		</control>
	</include>
	
	<include name="PVRCustomBGPath">
		<imagepath>$INFO[Skin.String(CustomPVRBGPath)]</imagepath>
	</include>
	
	<include name="PVRFanartBGPath">
		<imagepath background="true">$INFO[Window(Home).Property(SkinHelper.PvrBackground)]</imagepath>
	</include>
	
	<include name="WeatherCustomBGPath">
		<imagepath>$INFO[Skin.String(CustomWeatherBGPath)]</imagepath>
	</include>

	<include name="WeatherConditionBGPath">
		<imagepath background="true">$INFO[Skin.String(CustomWeatherBGPath)]$INFO[Window(Weather).Property(Current.FanartCode)]</imagepath>
	</include>

	<include name="TVTunesDisableVizCond">
		<visible>IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))</visible>
	</include>

	<include name="IsMediaPlayingCondition">
		<visible>!Player.HasMedia</visible>
	</include>
	
	<include name="MusicPlayingArtistFanart">
		<control type="image">
			<include>ScreenSize</include>
			<texture>$INFO[Player.Art(fanart)]</texture>
			<aspectratio>scale</aspectratio>
			<include condition="Skin.HasSetting(AnimateFanartMusicPlayingBG)">FanartBackgroundAnim</include>
		</control>
	</include>
	
	<include name="MusicPlayingArtistFanartSlideshow">
		<control type="multiimage">
			<include>BackgroundSize</include>
			<imagepath>$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>BackgroundCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<visible>!IsEmpty(Window(Visualisation).Property(ArtistSlideshow.ArtworkReady))</visible>
			<animation effect="fade" start="0" end="100" time="300">VisibleChange</animation>
			<include condition="Skin.HasSetting(AnimateFanartMusicPlayingBG)">FanartBackgroundAnim</include>
		</control>
		
		<control type="image">
			<include>BackgroundSize</include>
			<texture background="true">$INFO[MusicPlayer.Property(Fanart_Image)]</texture>
			<aspectratio>scale</aspectratio>
			<fadetime>BackgroundCrossfadeTime</fadetime>
			<visible>IsEmpty(Window(Visualisation).Property(ArtistSlideshow.ArtworkReady)) + !IsEmpty(MusicPlayer.Property(Fanart_Image))</visible>
			<animation effect="fade" start="0" end="100" time="300">VisibleChange</animation>
			<include condition="Skin.HasSetting(AnimateFanartMusicPlayingBG)">FanartBackgroundAnim</include>
		</control>
	</include>
	
	<include name="MyPicsDBFadelabels">
		<control type="fadelabel" id="4165">
			<pauseatend>7000</pauseatend>
			<left>1500</left>
			<font>font13</font>
			<textcolor>00FFFFFF</textcolor>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.1.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.2.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.3.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.4.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.5.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.6.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.7.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.8.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.9.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.10.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.11.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.12.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.13.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.14.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.15.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.16.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.17.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.18.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.19.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.20.Path)]</label>
			<visible>Skin.String(CustomPicturesBGType,4)</visible>
		</control>
		
		<control type="fadelabel" id="4165">
			<pauseatend>7000</pauseatend>
			<left>1500</left>
			<font>font13</font>
			<textcolor>00FFFFFF</textcolor>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.1.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.2.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.3.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.4.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.5.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.6.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.7.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.8.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.9.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.10.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.11.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.12.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.13.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.14.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.15.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.16.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.17.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.18.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.19.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.20.Path)]</label>
			<visible>Skin.String(CustomPicturesBGType,5)</visible>
		</control>
	</include>
</includes>