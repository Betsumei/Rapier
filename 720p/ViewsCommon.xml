<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!--//// START ICON VIEW //////////////////////////////////////////////////////////////////////////-->
	<include name="IconView">
		<control type="group" id="500">	
		    <defaultcontrol always="true">50</defaultcontrol>
			<visible>Control.IsVisible(50)</visible>	
			<include>MediaViewOpenCloseAnim</include>
			<include>IconViewScrollbar</include>
			
			<control type="panel" id="50">
				<viewtype label="31103">Icon</viewtype>
				<left>31</left>
				<top>85</top>
				<width>1218</width>
				<height>555</height>
				<pagecontrol>901</pagecontrol>	
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">404</scrolltime>
				<onup>50</onup>
				<ondown>50</ondown>
				<onleft>850</onleft>
				<onright>150</onright>
				<itemlayout condition="Container.Content(TVShows)" height="185" width="203">
					<control type="image">
						<description>Default Cover</description>
						<left>6</left> 
						<top>6</top>
						<width>192</width>
						<height>150</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>6</left> 
						<top>6</top>
						<width>192</width>
						<height>150</height>
						<texture background="true">$VAR[TVShowsThumbTexture]</texture>
						<aspectratio aligny="bottom">keep</aspectratio>
						<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
						<bordersize>6</bordersize>
						<visible>Skin.String(CommonIconTVShowStyle,1) | Skin.String(CommonIconTVShowStyle,)</visible>
					</control>
					<control type="image">
						<description>Clear Logo</description>
						<left>14</left> 
						<top>9</top>
						<width>176</width>
						<height>144</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Skin.String(CommonIconTVShowStyle,2)</visible>
					</control>
					<control type="image">
						<description>Clear Art</description>
						<left>14</left> 
						<top>9</top>
						<width>176</width>
						<height>144</height>
						<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Skin.String(CommonIconTVShowStyle,3)</visible>
					</control>
					<control type="image">
						<description>TV Thumb</description>
						<left>6</left> 
						<top>6</top>
						<width>192</width>
						<height>150</height>
						<texture background="true">$VAR[LandscapeThumb]</texture>
						<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Skin.String(CommonIconTVShowStyle,4)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>19</left>
						<top>160</top>
						<width>165</width>
						<font>IconFont</font>
						<textcolor>GreyColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>center</align>
						<info>ListItem.Label</info>
						<visible>[Skin.String(CommonIconTVShowStyle,1) | Skin.String(CommonIconTVShowStyle,)] + !Skin.HasSetting(HideTVShowsIconLabel)</visible>
					</control>
				</itemlayout>			
				<itemlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="185" width="203">
					<control type="image">
						<description>Default Cover</description>
						<left>6</left> 
						<top>6</top>
						<width>192</width>
						<height>150</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>6</left> 
						<top>6</top>
						<width>192</width>
						<height>150</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio aligny="bottom">keep</aspectratio>
						<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
						<bordersize>6</bordersize>
						<visible>Skin.String(CommonIconMoviesStyle,1) | Skin.String(CommonIconMoviesStyle,)</visible>
					</control>
					<control type="image">
						<description>Clear Logo</description>
						<left>14</left> 
						<top>9</top>
						<width>176</width>
						<height>144</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Skin.String(CommonIconMoviesStyle,2)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>19</left>
						<top>160</top>
						<width>165</width>
						<font>IconFont</font>
						<textcolor>GreyColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>center</align>
						<info>ListItem.Label</info>
						<visible>[Skin.String(CommonIconMoviesStyle,1) | Skin.String(CommonIconMoviesStyle,)] + !Skin.HasSetting(HideMoviesIconLabel)</visible>
					</control>
				</itemlayout>			
				<itemlayout condition="![Container.Content(Movies) | Container.Content(Sets) | Container.Content(TVShows)]" height="185" width="203">
					<control type="image">
						<description>Default Cover</description>
						<left>6</left> 
						<top>6</top>
						<width>192</width>
						<height>150</height>
						<texture background="true" fallback="special://skin/extras/moviegenres/default.png">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.png]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>6</left> 
						<top>6</top>
						<width>192</width>
						<height>150</height>
						<texture background="true" fallback="special://skin/extras/musicgenres/default.png">$INFO[ListItem.Label,special://skin/extras/musicgenres/,.png]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>6</left> 
						<top>6</top>
						<width>192</width>
						<height>150</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb) + ![Container.Content(Genres) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>6</left> 
						<top>6</top>
						<width>192</width>
						<height>150</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio aligny="bottom">keep</aspectratio>
						<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
						<bordersize>6</bordersize>
					</control>
					<control type="label">
						<description>Label</description>
						<left>19</left>
						<top>160</top>
						<width>165</width>
						<font>IconFont</font>
						<textcolor>GreyColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>center</align>
						<info>ListItem.Label</info>
						<visible>![Container.Content(Albums) + Skin.HasSetting(HideMusicIconLabel)]
						+ ![Window.IsActive(Pictures) + Skin.HasSetting(HidePicturesIconLabel)]</visible>
					</control>
				</itemlayout>															
				<focusedlayout condition="Container.Content(TVShows)" height="185" width="203">
					<control type="image">
						<description>Cover Focus</description>
						<left>0</left>
						<top>0</top>
						<width>203</width>
						<height>185</height>
						<texture border="12">covers/cover-case-focus2.png</texture>
						<visible>!IsEmpty(ListItem.Title) + [Skin.String(CommonIconTVShowStyle,2) | Skin.String(CommonIconTVShowStyle,3)]</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>0</left> 
						<top>0</top>
						<width>204</width>
						<height>162</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordertexture border="12">covers/cover-case-focus2.png</bordertexture>
						<bordersize>12</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>0</left> 
						<top>0</top>
						<width>204</width>
						<height>162</height>
						<texture background="true">$VAR[TVShowsThumbTexture]</texture>
						<bordertexture border="12">covers/cover-case-focus2.png</bordertexture>
						<bordersize>12</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<visible>Skin.String(CommonIconTVShowStyle,1) | Skin.String(CommonIconTVShowStyle,)</visible>
					</control>
					<control type="image">
						<description>Clear Logo</description>
						<left>14</left> 
						<top>9</top>
						<width>176</width>
						<height>144</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Skin.String(CommonIconTVShowStyle,2)</visible>
					</control>
					<control type="image">
						<description>Clear Art</description>
						<left>14</left> 
						<top>9</top>
						<width>176</width>
						<height>144</height>
						<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Skin.String(CommonIconTVShowStyle,3)</visible>
					</control>
					<control type="image">
						<description>TV Thumb</description>
						<left>0</left> 
						<top>0</top>
						<width>204</width>
						<height>162</height>
						<texture background="true">$VAR[LandscapeThumb]</texture>
						<bordertexture border="12">covers/cover-case-focus2.png</bordertexture>
						<bordersize>12</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Skin.String(CommonIconTVShowStyle,4)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>19</left>
						<top>160</top>
						<width>165</width>
						<font>IconFont</font>
						<textcolor>SelectedColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>center</align>
						<info>ListItem.Label</info>
						<visible>Skin.String(CommonIconTVShowStyle,1) | Skin.String(CommonIconTVShowStyle,)</visible>
					</control>
				</focusedlayout>			
				<focusedlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="185" width="203">
					<control type="image">
						<description>Cover Focus</description>
						<left>0</left>
						<top>0</top>
						<width>203</width>
						<height>185</height>
						<texture border="12">covers/cover-case-focus2.png</texture>
						<visible>!IsEmpty(ListItem.Title) + Skin.String(CommonIconMoviesStyle,2)</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>0</left> 
						<top>0</top>
						<width>204</width>
						<height>162</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordertexture border="12">covers/cover-case-focus2.png</bordertexture>
						<bordersize>12</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>0</left> 
						<top>0</top>
						<width>204</width>
						<height>162</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<bordertexture border="12">covers/cover-case-focus2.png</bordertexture>
						<bordersize>12</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<visible>Skin.String(CommonIconMoviesStyle,1) | Skin.String(CommonIconMoviesStyle,)</visible>
					</control>
					<control type="image">
						<description>Clear Logo</description>
						<left>14</left> 
						<top>9</top>
						<width>176</width>
						<height>144</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Skin.String(CommonIconMoviesStyle,2)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>19</left>
						<top>160</top>
						<width>165</width>
						<font>IconFont</font>
						<textcolor>SelectedColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>center</align>
						<info>ListItem.Label</info>
						<visible>Skin.String(CommonIconMoviesStyle,1) | Skin.String(CommonIconMoviesStyle,)</visible>
					</control>
				</focusedlayout>		
				<focusedlayout condition="![Container.Content(Movies) | Container.Content(Sets) | Container.Content(TVShows)]" height="185" width="203">
					<control type="image">
						<description>Default Cover</description>
						<left>0</left> 
						<top>0</top>
						<width>204</width>
						<height>162</height>
						<texture background="true" fallback="special://skin/extras/moviegenres/default.png">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.png]</texture>
						<bordertexture border="12">covers/cover-case-focus2.png</bordertexture>
						<bordersize>12</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>0</left> 
						<top>0</top>
						<width>204</width>
						<height>162</height>
						<texture background="true" fallback="special://skin/extras/musicgenres/default.png">$INFO[ListItem.Label,special://skin/extras/musicgenres/,.png]</texture>
						<bordertexture border="12">covers/cover-case-focus2.png</bordertexture>
						<bordersize>12</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>0</left> 
						<top>0</top>
						<width>204</width>
						<height>162</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordertexture border="12">covers/cover-case-focus2.png</bordertexture>
						<bordersize>12</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb) + ![Container.Content(Genres) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>0</left> 
						<top>0</top>
						<width>204</width>
						<height>162</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<bordertexture border="12">covers/cover-case-focus2.png</bordertexture>
						<bordersize>12</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
					</control>
					<control type="label">
						<description>Label</description>
						<left>19</left>
						<top>160</top>
						<width>165</width>
						<font>IconFont</font>
						<textcolor>SelectedColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>center</align>
						<info>ListItem.Label</info>
					</control>
				</focusedlayout>
			</control>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include condition="!Skin.HasSetting(DisableMoviesClearLogo)">InfoPaneClearLogoMovies</include>
				<include condition="!Skin.HasSetting(EnableMusicLibraryClearLogos)">InfoPaneClearLogoMusic</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>

			<include>ViewsDialogPopUpScreenDim</include>
		</control>		
	</include>
	<!--//// END ICON VIEW ////////////////////////////////////////////////////////////////////////////-->
	
	<!--//// START LIST VIEW //////////////////////////////////////////////////////////////////////////-->
	<include name="ListView">
		<control type="group" id="500">			    
			<defaultcontrol always="true">52</defaultcontrol>
			<visible>Control.IsVisible(52)</visible>
			<include>MediaViewOpenCloseAnim</include>	
			
			<control type="image">
				<left>30</left>
				<top>106</top>
				<width>755</width>
				<height>525</height>
				<texture border="7">panels/content-panel.png</texture>
				<include>PanelFadeAnim</include>
			</control> 

			<control type="group">
				<description>Cover</description>
				<left>840</left>
				<top>150</top>
				<visible>![[Container.Content(Movies) | Container.Content(Episodes)] + Skin.HasSetting(EnableListExtraThumbs)]</visible>

				<control type="group">
					<visible>!Container.Content(TVShows)</visible>
					
					<control type="image">
						<description>Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$INFO[ListItem.Art(tvshow.poster)]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
						<visible>IsEmpty(ListItem.Thumb) + Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png">$INFO[ListItem.Art(tvshow.poster)]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<visible>IsEmpty(ListItem.Thumb) + Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))</visible>
					</control>
					
					<control type="image">
						<description>Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
						<visible>Container.Content(Seasons)</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png">$VAR[PosterThumb]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<visible>Container.Content(Seasons)</visible>
					</control>
					
					<control type="image">
						<description>Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$INFO[ListItem.Thumb]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
						<visible>!IsEmpty(ListItem.Thumb)</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png">$INFO[ListItem.Thumb]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<visible>!IsEmpty(ListItem.Thumb)</visible>
					</control>
					
					<control type="image">
						<description>Cover Video Library</description>
						<width>400</width>
						<height>400</height>
						<texture background="true" fallback="special://skin/extras/moviegenres/default.png">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.png]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					
					<control type="image">
						<description>Cover Music Library</description>
						<width>400</width>
						<height>400</height>
						<texture background="true" fallback="special://skin/extras/musicgenres/default.png">$INFO[ListItem.Label,special://skin/extras/musicgenres/,.png]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					
					<control type="image">
						<description>Cover Default</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>IsEmpty(ListItem.Thumb) + ![Container.Content(Genres) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection Video Library</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" fallback="special://skin/extras/moviegenres/default.png" flipy="true" diffuse="views/reflection.png">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.png]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection Music Library</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" fallback="special://skin/extras/musicgenres/default.png" flipy="true" diffuse="views/reflection.png">$INFO[ListItem.Label,special://skin/extras/musicgenres/,.png]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection Default</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png">$INFO[ListItem.ActualIcon]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>IsEmpty(ListItem.Thumb) + ![Container.Content(Genres) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
					</control>
				</control>

				<control type="group">
					<visible>Container.Content(TVShows)</visible>
					
					<control type="image">
						<description>Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
					
					<control type="image">
						<description>Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$VAR[TVShowsThumbTexture]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
					</control>

					<control type="image">
						<description>Cover Reflection</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png">$VAR[TVShowsThumbTexture]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
					</control>
				</control>
			</control>
			
			<control type="grouplist">
				<left>880</left>
				<top>116</top>
				<width>320</width>
				<height>505</height>
				<align>center</align>
				<itemgap>35</itemgap>
				<visible>[Container.Content(Movies) | Container.Content(Episodes)] + Skin.HasSetting(EnableListExtraThumbs)</visible>
				<control type="image">
					<width>320</width>
					<height>158</height>
					<texture background="true">$INFO[ListItem.Path]extrathumbs/thumb1.jpg</texture>
					<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
					<bordersize>14</bordersize>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="image">
					<width>320</width>
					<height>158</height>
					<texture background="true">$INFO[ListItem.Path]extrathumbs/thumb2.jpg</texture>
					<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
					<bordersize>14</bordersize>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="image">
					<width>320</width>
					<height>158</height>
					<texture background="true">$INFO[ListItem.Path]extrathumbs/thumb3.jpg</texture>	
					<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
					<bordersize>14</bordersize>
					<aspectratio>keep</aspectratio>
				</control>
			</control>
			
			<control type="list" id="52">	
				<viewtype label="31105">List</viewtype>
				<left>40</left>
				<top>110</top>
				<width>720</width>
				<height>518</height>
				<pagecontrol>903</pagecontrol>
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">300</scrolltime>
				<onup>52</onup>
				<ondown>52</ondown>
				<onleft>850</onleft>
				<onright>150</onright>				
				<include condition="Skin.String(CommonListStyle,) | Skin.String(CommonListStyle,1) | Skin.String(CommonListStyle,3)">CommonListItemLayout</include>
				<include condition="Skin.String(CommonListStyle,2)">CommonListTallStyleItemLayout</include>
				<include condition="Skin.String(CommonListStyle,) | Skin.String(CommonListStyle,1)">CommonListFocusedLayout</include>
				<include condition="Skin.String(CommonListStyle,2) | Skin.String(CommonListStyle,3)">CommonListTallStyleFocusedLayout</include>
			</control>

			<include>ListViewScrollbar</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include condition="!Skin.HasSetting(DisableMoviesClearLogo)">InfoPaneClearLogoMovies</include>
				<include condition="!Skin.HasSetting(EnableMusicLibraryClearLogos)">InfoPaneClearLogoMusic</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>
			
			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	
	<include name="CommonListItemLayout">
		<itemlayout height="37" condition="Container.Content(Movies) | Container.Content(Sets) | Container.Content(Episodes) | Container.Content(MusicVideos) | Window.IsActive(VideoPlaylist)">
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Icon</description>
				<left>5</left>
				<top>6</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>IsEmpty(ListItem.Title)</visible>
				<include>ListViewOverlayFadeAnim</include>
			</control>
			<control type="label">
				<description>Label</description>
				<left>35</left>
				<width>580</width>
				<height>37</height>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<aligny>center</aligny>				
				<info>ListItem.Label</info>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>510</left>
				<width>200</width>
				<height>37</height>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>				
				<info>ListItem.Label2</info>
				<visible>![[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(DoNotUseStarRatingMovies)]
				| [Container.Content(Episodes) + !Skin.HasSetting(DoNotUseStarRatingEpisodes)]]</visible>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(DoNotUseStarRatingMovies) + Skin.HasSetting(UseHalfStarsMovies)]
					| [Container.Content(Episodes) + !Skin.HasSetting(DoNotUseStarRatingEpisodes) + Skin.HasSetting(UseHalfStarsEpisodes)]</visible>
					<include>StarRatingFadeAnim</include>
				</control>
				<control type="image">
					<description>Half Star Rating</description>
					<left>610</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[HalfStarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(DoNotUseStarRatingMovies) + !Skin.HasSetting(UseHalfStarsMovies)]
					| [Container.Content(Episodes) + !Skin.HasSetting(DoNotUseStarRatingEpisodes) + !Skin.HasSetting(UseHalfStarsEpisodes)]</visible>
					<include>StarRatingFadeAnim</include>
				</control>
				<control type="image">
					<description>Quality</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					<include>ListViewOverlayFadeAnim</include>
				</control>	
				<control type="image">
					<description>Quality</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
					<aspectratio>keep</aspectratio>
					<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					<include>ListViewOverlayFadeAnim</include>
				</control>
				<control type="image">
					<description>Watched Partial</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[WatchedPartial]</texture>
					<aspectratio>keep</aspectratio>
					<visible>ListItem.IsResumable</visible>
					<include>ListViewPartialWatchedOverlayFadeAnim</include>
					<include>ListViewWatchedOverlayFadeAnim</include>
				</control>	
			</control>
		</itemlayout>
		<itemlayout height="37" condition="Container.Content(TVShows) | Container.Content(Seasons)">
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Icon</description>
				<left>5</left>
				<top>6</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>IsEmpty(ListItem.Title)</visible>
				<include>ListViewOverlayFadeAnim</include>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<font>ListFont3</font>
				<textcolor>ListColor</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<font>ListFont4</font>
				<textcolor>ListColor</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
			<control type="image">
				<description>Unwatched Overlay</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<aligny>center</aligny>
				<texture background="true">OverlayClean.png</texture>
				<aspectratio>keep</aspectratio>
				<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
			</control>
			<control type="image">
				<description>Watched Overlay</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<aligny>center</aligny>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="label">
				<description>Label</description>
				<left>35</left>
				<width>580</width>
				<height>37</height>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<aligny>center</aligny>				
				<info>ListItem.Label</info>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>510</left>
				<width>200</width>
				<height>37</height>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>				
				<info>ListItem.Label2</info>		
				<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>610</left>
				<top>10</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$INFO[ListItem.StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows) + Skin.HasSetting(UseHalfStarsTVShows)</visible>
				<include>StarRatingFadeAnim</include>
			</control>
			<control type="image">
				<description>Half Star Rating</description>
				<left>610</left>
				<top>10</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$VAR[HalfStarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows) + !Skin.HasSetting(UseHalfStarsTVShows)</visible>
				<include>StarRatingFadeAnim</include>
			</control>
		</itemlayout>		
		<itemlayout height="37">
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Icon</description>
				<left>5</left>
				<top>6</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>IsEmpty(ListItem.Overlay) | !StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
				<include>ListViewOverlayFadeAnim</include>
			</control>
			<control type="label">
				<description>Label</description>
				<left>35</left>
				<width>580</width>
				<height>37</height>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<aligny>center</aligny>				
				<info>ListItem.Label</info>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>510</left>
				<width>200</width>
				<height>37</height>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>				
				<info>ListItem.Label2</info>
				<visible>![[Container.Content(Albums) | Container.Content(Songs)] + !Skin.HasSetting(DoNotUseStarRatingMusic)]</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>610</left>
				<top>10</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$INFO[ListItem.StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>[[Container.Content(Albums) | Container.Content(Songs)] + !Skin.HasSetting(DoNotUseStarRatingMusic)]</visible>
				<include>StarRatingFadeAnim</include>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>5</left>
				<top>6</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<include>ListViewOverlayFadeAnim</include>
			</control>
		</itemlayout>		
	</include>

	<include name="CommonListFocusedLayout">
		<focusedlayout height="37" condition="Container.Content(Movies) | Container.Content(Sets) | Container.Content(Episodes) | Container.Content(MusicVideos) | Window.IsActive(VideoPlaylist)">	
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="!Skin.HasSetting(DisableListViewScrollAnim)">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="image">
					<description>Icon</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="label">
					<description>Label</description>
					<left>35</left>
					<width>580</width>
					<height>37</height>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<aligny>center</aligny>
					<info>ListItem.Label</info>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>510</left>
					<width>200</width>
					<height>37</height>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>				
					<info>ListItem.Label2</info>
					<visible>![[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(DoNotUseStarRatingMovies)]
					| [Container.Content(Episodes) + !Skin.HasSetting(DoNotUseStarRatingEpisodes)]]</visible>
				</control>
				<control type="group">
					<visible>!IsEmpty(ListItem.Title)</visible>
					<control type="image">
						<description>Star Rating</description>
						<left>610</left>
						<top>10</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$INFO[ListItem.StarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(DoNotUseStarRatingMovies) + Skin.HasSetting(UseHalfStarsMovies)]
						| [Container.Content(Episodes) + !Skin.HasSetting(DoNotUseStarRatingEpisodes) + Skin.HasSetting(UseHalfStarsEpisodes)]</visible>
					</control>
					<control type="image">
						<description>Half Star Rating</description>
						<left>610</left>
						<top>10</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$VAR[HalfStarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(DoNotUseStarRatingMovies) + !Skin.HasSetting(UseHalfStarsMovies)]
						| [Container.Content(Episodes) + !Skin.HasSetting(DoNotUseStarRatingEpisodes) + !Skin.HasSetting(UseHalfStarsEpisodes)]</visible>
					</control>
					<control type="image">
						<description>Quality</description>
						<left>5</left>
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>	
					<control type="image">
						<description>Quality</description>
						<left>5</left>
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>5</left>
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable</visible>
						<include>ListViewPartialWatchedOverlayFadeAnim</include>
						<include>ListViewWatchedOverlayFadeAnim</include>
					</control>	
				</control>
			</control>
		</focusedlayout>
		<focusedlayout height="37" condition="Container.Content(TVShows) | Container.Content(Seasons)">	
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="!Skin.HasSetting(DisableListViewScrollAnim)">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="image">
					<description>Icon</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="image">
					<description>Watched Overlay</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<aligny>center</aligny>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
				</control>
				<control type="label">
					<description>Label</description>
					<left>35</left>
					<width>580</width>
					<height>37</height>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<aligny>center</aligny>
					<info>ListItem.Label</info>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>510</left>
					<width>200</width>
					<height>37</height>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>				
					<info>ListItem.Label2</info>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows) + Skin.HasSetting(UseHalfStarsTVShows)</visible>
				</control>
				<control type="image">
					<description>Half Star Rating</description>
					<left>610</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[HalfStarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows) + !Skin.HasSetting(UseHalfStarsTVShows)</visible>
				</control>
			</control>
		</focusedlayout>		
		<focusedlayout height="37">	
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="!Skin.HasSetting(DisableListViewScrollAnim)">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="image">
					<description>Icon</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
					<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="label">
					<description>Label</description>
					<left>35</left>
					<width>580</width>
					<height>37</height>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<aligny>center</aligny>
					<info>ListItem.Label</info>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>510</left>
					<width>200</width>
					<height>37</height>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>				
					<info>ListItem.Label2</info>
					<visible>![[Container.Content(Albums) | Container.Content(Songs)] + !Skin.HasSetting(DoNotUseStarRatingMusic)]</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>[[Container.Content(Albums) | Container.Content(Songs)] + !Skin.HasSetting(DoNotUseStarRatingMusic)]</visible>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
				</control>
			</control>
		</focusedlayout>		
	</include>
	
	<include name="CommonListTallStyleItemLayout">
		<itemlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>60</left>
				<top>12</top>
				<width>555</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>60</left>
				<top>38</top>
				<width>555</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Year]$INFO[ListItem.Director,  -  ,]</label>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingMovies)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingMovies) + Skin.HasSetting(UseHalfStarsMovies)</visible>
					<include>StarRatingFadeAnim</include>
				</control>
				<control type="image">
					<description>Half Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[HalfStarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingMovies) + !Skin.HasSetting(UseHalfStarsMovies)</visible>
					<include>StarRatingFadeAnim</include>
				</control>
				<control type="group">
					<visible>!Skin.HasSetting(HideMoviesListOverlay)</visible>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						<include>ListViewOverlayFadeAnim</include>
					</control>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						<include>ListViewOverlayFadeAnim</include>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable</visible>
						<include>ListViewPartialWatchedOverlayFadeAnim</include>
						<include>ListViewWatchedOverlayFadeAnim</include>
					</control>
				</control>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(MusicVideos)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>								
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Year]$INFO[ListItem.Artist,  -  ,]</label>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<include>StarRatingFadeAnim</include>
				</control>
				<control type="image">
					<description>Quality</description>
					<left>686</left>
					<top>39</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					<include>ListViewOverlayFadeAnim</include>
				</control>
				<control type="image">
					<description>Quality</description>
					<left>686</left>
					<top>39</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
					<aspectratio>keep</aspectratio>
					<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					<include>ListViewOverlayFadeAnim</include>
				</control>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(TVShows)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Art(poster)]</texture>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>CoverDimAnim</include>
			</control>						
			<control type="label">
				<description>Label</description>
				<left>60</left>
				<top>12</top>
				<width>555</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>	
			</control>
			<control type="label">
				<description>Label2</description>
				<left>60</left>
				<top>38</top>
				<width>555</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Year]$INFO[ListItem.Episode,  -  , $LOCALIZE[20360]]</label>
			</control>
			<control type="label">
				<description>Rating</description>
				<left>610</left>
				<top>12</top>
				<width>100</width>
				<font>ListFont</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Rating]</label>
				<align>right</align>
				<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>610</left>
				<top>16</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$INFO[ListItem.StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows) + Skin.HasSetting(UseHalfStarsTVShows)</visible>
				<include>StarRatingFadeAnim</include>
			</control>
			<control type="image">
				<description>Half Star Rating</description>
				<left>610</left>
				<top>16</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$VAR[HalfStarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows) + !Skin.HasSetting(UseHalfStarsTVShows)</visible>
				<include>StarRatingFadeAnim</include>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>689</left>
				<top>41</top>
				<width>20</width>
				<height>20</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!Skin.HasSetting(HideTVShowsListOverlay)</visible>
				<include>ListViewOverlayFadeAnim</include>
			</control>	
		</itemlayout>
		<itemlayout condition="Container.Content(Episodes)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>4</top>
				<width>97</width>
				<height>65</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>4</top>
				<width>97</width>
				<height>65</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>4</top>
				<width>97</width>
				<height>65</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>								
			<control type="label">
				<description>Label</description>
				<left>104</left>
				<top>12</top>
				<width>511</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<visible>IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>104</left>
				<top>38</top>
				<width>511</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Season,$LOCALIZE[20373] ,]$INFO[ListItem.Episode,  -  $LOCALIZE[20359] ,]</label>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="label">
					<description>Label</description>
					<left>104</left>
					<top>12</top>
					<width>511</width>
					<font>ListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Title]</label>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingEpisodes)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingEpisodes) + Skin.HasSetting(UseHalfStarsEpisodes)</visible>
					<include>StarRatingFadeAnim</include>
				</control>
				<control type="image">
					<description>Half Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[HalfStarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingEpisodes) + !Skin.HasSetting(UseHalfStarsEpisodes)</visible>
					<include>StarRatingFadeAnim</include>
				</control>
				<control type="group">
					<visible>!Skin.HasSetting(HideEpisodesListOverlay)</visible>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						<include>ListViewOverlayFadeAnim</include>
					</control>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						<include>ListViewOverlayFadeAnim</include>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable</visible>
						<include>ListViewPartialWatchedOverlayFadeAnim</include>
						<include>ListViewWatchedOverlayFadeAnim</include>
					</control>
				</control>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(Seasons)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="60" condition="true">Conditional</animation>
			</control>								
			<control type="label">
				<description>Label</description>
				<left>60</left>
				<top>12</top>
				<width>555</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[ListTallStyleLabel]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>60</left>
				<top>38</top>
				<width>555</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]$INFO[ListItem.Property(UnWatchedEpisodes),  -  , $LOCALIZE[16101]]</label>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>689</left>
				<top>41</top>
				<width>20</width>
				<height>20</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!Skin.HasSetting(HideSeasonsListOverlay)</visible>
				<include>ListViewOverlayFadeAnim</include>
			</control>	
		</itemlayout>
		<itemlayout condition="Container.Content(Albums)" height="74">	
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[ListTallStyleLabel]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Year]$INFO[ListItem.Artist,  -  ,]</label>
			</control>
			<control type="label">
				<description>Rating</description>
				<left>610</left>
				<top>12</top>
				<width>100</width>
				<font>ListFont</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Rating]</label>
				<align>right</align>
				<visible>Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>610</left>
				<top>16</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$INFO[ListItem.StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!IsEmpty(ListItem.Album) + !Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				<include>StarRatingFadeAnim</include>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(Songs)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[ListTallStyleLabel]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Duration,, $LOCALIZE[31003]]$INFO[ListItem.Artist,  -  ,]</label>
			</control>
			<control type="label">
				<description>Rating</description>
				<left>610</left>
				<top>12</top>
				<width>100</width>
				<font>ListFont</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Rating]</label>
				<align>right</align>
				<visible>Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>610</left>
				<top>16</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$INFO[ListItem.StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				<include>StarRatingFadeAnim</include>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(Artists)" height="74">	
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[ListTallStyleLabel]</label>
			</control>
			<control type="label">
				<description>Label2 (Born)</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Property(Artist_Born)]</label>
				<visible>!IsEmpty(ListItem.Property(Artist_Born))</visible>
			</control>
			<control type="label">
				<description>Label2 (Formed)</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Property(Artist_Formed)]</label>
				<visible>!IsEmpty(ListItem.Property(Artist_Formed))</visible>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(Addons)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>	
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<description>Label2 (Addons)</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Property(Addon.Version)]$INFO[ListItem.Property(Addon.Creator),  -  ,]</label>
			</control>
			<control type="label">
				<description>Status (Addons)</description>
				<left>610</left>
				<top>12</top>
				<width>100</width>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>
				<info>ListItem.Property(Addon.Status)</info>
			</control>
		</itemlayout>
		<itemlayout height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true" fallback="special://skin/extras/moviegenres/default.png">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.png]</texture>
				<aspectratio>keep</aspectratio>
				<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true" fallback="special://skin/extras/musicgenres/default.png">$INFO[ListItem.Label,special://skin/extras/musicgenres/,.png]</texture>
				<aspectratio>keep</aspectratio>
				<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb) + ![Container.Content(Genres) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>								
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label2]</label>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>689</left>
				<top>41</top>
				<width>20</width>
				<height>20</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio align="right">keep</aspectratio>
				<include>ListViewOverlayFadeAnim</include>
			</control>	
		</itemlayout>
	</include>
	
	<include name="CommonListTallStyleFocusedLayout">	
		<focusedlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>	
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>60</left>
					<top>12</top>
					<width>555</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>60</left>
					<top>38</top>
					<width>555</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Year]$INFO[ListItem.Director,  -  ,]</label>
				</control>
				<control type="group">
					<visible>!IsEmpty(ListItem.Title)</visible>
					<control type="label">
						<description>Rating</description>
						<left>610</left>
						<top>12</top>
						<width>100</width>
						<font>ListFont</font>
						<textcolor>ListColor3</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$INFO[ListItem.Rating]</label>
						<align>right</align>
						<visible>Skin.HasSetting(DoNotUseStarRatingMovies)</visible>
					</control>
					<control type="image">
						<description>Star Rating</description>
						<left>610</left>
						<top>16</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$INFO[ListItem.StarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!Skin.HasSetting(DoNotUseStarRatingMovies) + Skin.HasSetting(UseHalfStarsMovies)</visible>
					</control>
					<control type="image">
						<description>Half Star Rating</description>
						<left>610</left>
						<top>16</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$VAR[HalfStarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!Skin.HasSetting(DoNotUseStarRatingMovies) + !Skin.HasSetting(UseHalfStarsMovies)</visible>
					</control>
					<control type="group">
						<visible>!Skin.HasSetting(HideMoviesListOverlay)</visible>
						<control type="image">
							<description>Quality</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
							<aspectratio>keep</aspectratio>
							<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
						<control type="image">
							<description>Quality</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
							<aspectratio>keep</aspectratio>
							<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
						<control type="image">
							<description>Watched Partial</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[WatchedPartial]</texture>
							<aspectratio align="right">keep</aspectratio>
							<visible>ListItem.IsResumable</visible>
							<include>ListViewPartialWatchedOverlayFadeAnim</include>
							<include>ListViewWatchedOverlayFadeAnim</include>
						</control>
					</control>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(MusicVideos)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>	
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Year]$INFO[ListItem.Artist,  -  ,]</label>
				</control>
				<control type="group">
					<visible>!IsEmpty(ListItem.Title)</visible>
					<control type="label">
						<description>Rating</description>
						<left>610</left>
						<top>12</top>
						<width>100</width>
						<font>ListFont</font>
						<textcolor>ListColor3</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$INFO[ListItem.Rating]</label>
						<align>right</align>
					</control>
					<control type="image">
						<description>Star Rating</description>
						<left>610</left>
						<top>16</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$INFO[ListItem.StarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
					</control>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(TVShows)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Art(poster)]</texture>
				<aspectratio>keep</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>60</left>
					<top>12</top>
					<width>555</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>60</left>
					<top>38</top>
					<width>555</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>	
					<label>$INFO[ListItem.Year]$INFO[ListItem.Episode,  -  , $LOCALIZE[20360]]</label>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows) + Skin.HasSetting(UseHalfStarsTVShows)</visible>
				</control>
				<control type="image">
					<description>Half Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[HalfStarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows) + !Skin.HasSetting(UseHalfStarsTVShows)</visible>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>689</left>
					<top>41</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsListOverlay)</visible>
				</control>	
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Episodes)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>4</top>
				<width>97</width>
				<height>65</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>4</top>
				<width>97</width>
				<height>65</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>	
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>104</left>
					<top>12</top>
					<width>511</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
					<visible>IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>104</left>
					<top>38</top>
					<width>511</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Season,$LOCALIZE[20373] ,]$INFO[ListItem.Episode,  -  $LOCALIZE[20359] ,]</label>
				</control>
				<control type="group">
					<visible>!IsEmpty(ListItem.Title)</visible>
					<control type="label">
						<description>Label</description>
						<left>104</left>
						<top>12</top>
						<width>511</width>
						<font>ListFont</font>
						<textcolor>SelectedColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$INFO[ListItem.Title]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<description>Rating</description>
						<left>610</left>
						<top>12</top>
						<width>100</width>
						<font>ListFont</font>
						<textcolor>ListColor3</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$INFO[ListItem.Rating]</label>
						<align>right</align>
						<visible>Skin.HasSetting(DoNotUseStarRatingEpisodes)</visible>
					</control>
					<control type="image">
						<description>Star Rating</description>
						<left>610</left>
						<top>16</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$INFO[ListItem.StarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!Skin.HasSetting(DoNotUseStarRatingEpisodes) + Skin.HasSetting(UseHalfStarsEpisodes)</visible>
					</control>
					<control type="image">
						<description>Half Star Rating</description>
						<left>610</left>
						<top>16</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$VAR[HalfStarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!Skin.HasSetting(DoNotUseStarRatingEpisodes) + !Skin.HasSetting(UseHalfStarsEpisodes)</visible>
					</control>
					<control type="group">
						<visible>!Skin.HasSetting(HideEpisodesListOverlay)</visible>
						<control type="image">
							<description>Quality</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
							<aspectratio>keep</aspectratio>
							<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
						<control type="image">
							<description>Quality</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
							<aspectratio>keep</aspectratio>
							<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
						<control type="image">
							<description>Watched Partial</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[WatchedPartial]</texture>
							<aspectratio>keep</aspectratio>
							<visible>ListItem.IsResumable</visible>
							<include>ListViewPartialWatchedOverlayFadeAnim</include>
							<include>ListViewWatchedOverlayFadeAnim</include>
						</control>
					</control>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Seasons)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>	
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>60</left>
					<top>12</top>
					<width>555</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[ListTallStyleLabel]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>60</left>
					<top>38</top>
					<width>555</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]$INFO[ListItem.Property(UnWatchedEpisodes),  -  , $LOCALIZE[16101]]</label>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>689</left>
					<top>41</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideSeasonsListOverlay)</visible>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Albums)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[ListTallStyleLabel]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Year]$INFO[ListItem.Artist,  -  ,]</label>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Album) + !Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Songs)" height="74">
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[ListTallStyleLabel]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Duration,, $LOCALIZE[31003]]$INFO[ListItem.Artist,  -  ,]</label>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Artists)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[ListTallStyleLabel]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2 (Born)</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Property(Artist_Born)]</label>
					<visible>!IsEmpty(ListItem.Property(Artist_Born))</visible>
				</control>
				<control type="label">
					<description>Label2 (Formed)</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Property(Artist_Formed)]</label>
					<visible>!IsEmpty(ListItem.Property(Artist_Formed))</visible>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Addons)" height="74">
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>	
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2 (Addons)</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Property(Addon.Version)]$INFO[ListItem.Property(Addon.Creator),  -  ,]</label>
				</control>
				<control type="label">
					<description>Status (Addons)</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<info>ListItem.Property(Addon.Status)</info>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>keep</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true" fallback="special://skin/extras/moviegenres/default.png">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.png]</texture>
				<aspectratio>keep</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
				<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true" fallback="special://skin/extras/musicgenres/default.png">$INFO[ListItem.Label,special://skin/extras/musicgenres/,.png]</texture>
				<aspectratio>keep</aspectratio>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
				<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb) + ![Container.Content(Genres) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
				<include condition="!Skin.HasSetting(DisableListViewCoverFocusAnim)">ListViewCoverFocusAnim</include>
			</control>	
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label2]</label>
				</control>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>689</left>
				<top>41</top>
				<width>20</width>
				<height>20</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio align="right">keep</aspectratio>
			</control>	
		</focusedlayout>			
	</include>
	
	<include name="ListTallStyleFocus">
		<control type="image">
			<left>0</left>
			<width>720</width>
			<height>74</height>	
			<texture border="0,0,10,2">views/list-separator.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
		<control type="image">
			<left>0</left>
			<width>720</width>
			<height>73</height>
			<texture border="4">views/list-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<visible>Control.HasFocus(52)</visible>
			<include>ListViewSelectFadeAnim</include>
			<include condition="!Skin.HasSetting(DisableListViewScrollAnim) + !Skin.String(CommonListStyle,3)">ListViewScrollAnim2</include>
			<include condition="!Skin.HasSetting(DisableListViewScrollAnim) + Skin.String(CommonListStyle,3)">ListViewScrollAnim</include>
		</control>
		<control type="image">
			<left>0</left>
			<width>720</width>
			<height>73</height>
			<texture border="4">views/list-alt-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<visible>!Control.HasFocus(52)</visible>
			<include>ListViewSelectFadeAnim2</include>
		</control>
	</include>
	
	<include name="ListTallStyleNoFocus">
		<control type="image">
			<left>0</left>
			<width>720</width>
			<height>74</height>	
			<texture border="0,0,10,2">views/list-separator.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	<!--//// END LIST VIEW ////////////////////////////////////////////////////////////////////////////-->
	
	<!--//// START DVD THUMBS VIEW ////////////////////////////////////////////////////////////////////-->
	<include name="DVDThumbsView">	
		<control type="group" id="500">	
	        <defaultcontrol always="true">54</defaultcontrol>
			<visible>Control.IsVisible(54)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ThumbnailViewScrollbar</include>

			<include condition="Skin.String(CommonDVDThumbsStyle,1) | Skin.String(CommonDVDThumbsStyle,)">CommonDVDThumbsStyle1</include>
			<include condition="Skin.String(CommonDVDThumbsStyle,2)">CommonDVDThumbsStyle2</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include>BottomPaneOpenCloseAnim</include>
				
				<control type="group">
					<visible>!Skin.HasSetting(HideDVDThumbsLabel)</visible>
					
					<control type="label">
						<include>InfoPaneItemTitle</include>
						<label>[B]$INFO[ListItem.Label][/B]</label>
						<visible>[[IsEmpty(ListItem.Art(clearlogo)) + !Container.Content(Seasons)] | [IsEmpty(ListItem.Art(tvshow.clearlogo)) + Container.Content(Seasons)]] | [[Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)] + Skin.HasSetting(DisableTVShowsLogo)]
						| [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(DisableMoviesClearLogo)]</visible>
					</control>
					
					<control type="group">
						<animation effect="slide" end="0,-11" condition="true">Conditional</animation>
						<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
						<include condition="!Skin.HasSetting(DisableMoviesClearLogo)">InfoPaneClearLogoMovies</include>
					</control>
					
					<control type="group">
						<visible>!Skin.HasSetting(ShowDVDThumbsRating)</visible>
						<animation effect="slide" end="0,10" time="100" condition="![[[IsEmpty(ListItem.Art(clearlogo)) + !Container.Content(Seasons)] | [IsEmpty(ListItem.Art(tvshow.clearlogo)) + Container.Content(Seasons)]] | [[Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)] + Skin.HasSetting(DisableTVShowsLogo)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(DisableMoviesClearLogo)]]">Conditional</animation>
						
						<control type="label">
							<include>InfoPaneItemTitle2</include>
							<label>$VAR[MovieGenre]</label>
							<visible>Window.IsActive(Videos)</visible>
						</control>
					</control>
					
					<control type="group">
						<visible>Skin.HasSetting(ShowDVDThumbsRating)</visible>
						<animation effect="slide" end="0,10" time="100" condition="![[[IsEmpty(ListItem.Art(clearlogo)) + !Container.Content(Seasons)] | [IsEmpty(ListItem.Art(tvshow.clearlogo)) + Container.Content(Seasons)]] | [[Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)] + Skin.HasSetting(DisableTVShowsLogo)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(DisableMoviesClearLogo)]]">Conditional</animation>
						
						<control type="label">
							<include>InfoPaneItemTitle2</include>
							<label>$INFO[ListItem.Rating]</label>
							<visible>Skin.HasSetting(DoNotUseStarRatingMovies)</visible>
						</control>
						
						<control type="image">
							<left>590</left>
							<top>24</top>
							<width>100</width>
							<height>16</height>
							<texture background="true">$INFO[ListItem.StarRating]</texture>
							<aspectratio>keep</aspectratio>
							<visible>!Skin.HasSetting(DoNotUseStarRatingMovies) + Skin.HasSetting(UseHalfStarsMovies)</visible>
							<include>MediaFlagFadeAnim</include>
						</control>
						
						<control type="image">
							<left>590</left>
							<top>24</top>
							<width>100</width>
							<height>16</height>
							<texture background="true">$VAR[HalfStarRating]</texture>
							<aspectratio>keep</aspectratio>
							<visible>!Skin.HasSetting(DoNotUseStarRatingMovies) + !Skin.HasSetting(UseHalfStarsMovies)</visible>
							<include>MediaFlagFadeAnim</include>
						</control>
					</control>
				</control>
			</control>	
			
			<include>ViewsDialogPopUpScreenDim</include>
		</control>		
	</include>
	
	<include name="CommonDVDThumbsStyle1">
		<control type="panel" id="54">
			<viewtype label="31107">DVD Thumbnail</viewtype>
			<left>16</left>
			<top>101</top>
			<width>1248</width>
			<height>540</height>
			<pagecontrol>904</pagecontrol>
			<preloaditems>2</preloaditems>
			<scrolltime tween="sine" easing="inout">404</scrolltime>
			<onup>54</onup>
			<ondown>54</ondown>
			<onleft>850</onleft>
			<onright>150</onright>
			<visible>Container.Content(Movies) | Container.Content(Seasons) | [Container.Content(TVShows) + Skin.HasSetting(UseTVShowsPosterCover)]</visible>
			<itemlayout condition="Container.Content(TVShows)" height="270" width="208">	
				<control type="image">
					<description>Cover Case</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<bordersize>25</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<bordersize>14</bordersize>
					<texture background="true">$VAR[TVShowsThumbTexture]</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>148</left>
					<top>201</top>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
				</control>		
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>148</left>
					<top>201</top>
					<width>26</width>
					<height>26</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>205</top>
					<left>148</left>
					<width>26</width>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>205</top>
					<left>148</left>
					<width>26</width>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
			</itemlayout>		
			<itemlayout condition="!Container.Content(TVShows)" height="270" width="208">	
				<control type="image">
					<description>Cover Case</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<bordersize>14</bordersize>
					<texture background="true">$VAR[PosterThumb]</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<bordersize>25</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>149</left>
					<top>202</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
				<control type="image">
					<description>Watched Partial</description>
					<left>149</left>
					<top>202</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[WatchedPartial]</texture>
					<aspectratio>keep</aspectratio>
					<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
			</itemlayout>
			<focusedlayout condition="Container.Content(TVShows)" height="270" width="208">	
				<control type="group">
					<include condition="!Skin.HasSetting(DisableThumbnailViewCoverFocusAnim)">ThumbnailViewCoverFocusAnim</include>
					<control type="image">
						<description>Cover Case</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<bordersize>25</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
					</control>	
					<control type="image">
						<description>Cover</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Art(poster)]</texture>
						<aspectratio>stretch</aspectratio>
					</control>		
					<control type="image">
						<description>Overlay</description>
						<left>148</left>
						<top>201</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
					</control>		
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>148</left>
						<top>201</top>
						<width>26</width>
						<height>26</height>
						<aligny>center</aligny>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>205</top>
						<left>148</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>205</top>
						<left>148</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</control>	
			</focusedlayout>																	
			<focusedlayout condition="!Container.Content(TVShows)" height="270" width="208">	
				<control type="group">
					<include condition="!Skin.HasSetting(DisableThumbnailViewCoverFocusAnim)">ThumbnailViewCoverFocusAnim</include>
					<control type="image">
						<description>Cover Case</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<bordersize>14</bordersize>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<bordersize>25</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>			
					<control type="image">
						<description>Overlay</description>
						<left>149</left>
						<top>202</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>149</left>
						<top>202</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>	
				</control>	
			</focusedlayout>			
		</control>
	</include>
	
	<include name="CommonDVDThumbsStyle2">
		<control type="panel" id="54">
			<viewtype label="31107">DVD Thumbnail</viewtype>
			<left>12</left>
			<top>101</top>
			<width>1242</width>
			<height>537</height>
			<pagecontrol>904</pagecontrol>
			<preloaditems>2</preloaditems>
			<scrolltime tween="sine" easing="inout">404</scrolltime>
			<onup>54</onup>
			<ondown>54</ondown>
			<onleft>850</onleft>
			<onright>150</onright>
			<visible>Container.Content(Movies) | Container.Content(Seasons) | [Container.Content(TVShows) + Skin.HasSetting(UseTVShowsPosterCover)]</visible>
			<itemlayout condition="Container.Content(TVShows)" height="179" width="138">	
				<control type="image">
					<description>Cover Case</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<bordersize>17</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<bordersize>12</bordersize>
					<texture background="true">$VAR[TVShowsThumbTexture]</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>100</left>
					<top>126</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
				</control>	
			</itemlayout>
			<itemlayout condition="!Container.Content(TVShows)" height="179" width="138">	
				<control type="image">
					<description>Cover Case</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<bordersize>12</bordersize>
					<texture background="true">$VAR[PosterThumb]</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<bordersize>17</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>100</left>
					<top>126</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>100</left>
					<top>126</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$VAR[WatchedPartial]</texture>
					<aspectratio>keep</aspectratio>
					<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
			</itemlayout>			
			<focusedlayout condition="Container.Content(TVShows)" height="179" width="138">	
				<control type="group">
					<include condition="!Skin.HasSetting(DisableThumbnailViewCoverFocusAnim)">ThumbnailViewCoverFocusAnim2</include>
					<control type="image">
						<description>Cover Case</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<bordersize>17</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
					</control>	
					<control type="image">
						<description>Cover</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<bordersize>12</bordersize>
						<texture background="true">$VAR[TVShowsThumbTexture]</texture>
						<aspectratio>stretch</aspectratio>
					</control>		
					<control type="image">
						<description>Overlay</description>
						<left>100</left>
						<top>126</top>
						<width>20</width>
						<height>20</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
					</control>
				</control>	
			</focusedlayout>
			<focusedlayout height="179" width="138">	
				<control type="group">
					<include condition="!Skin.HasSetting(DisableThumbnailViewCoverFocusAnim)">ThumbnailViewCoverFocusAnim2</include>
					<control type="image">
						<description>Cover Case</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<bordersize>12</bordersize>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<bordersize>17</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>			
					<control type="image">
						<description>Overlay</description>
						<left>100</left>
						<top>126</top>
						<width>20</width>
						<height>20</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>100</left>
						<top>126</top>
						<width>20</width>
						<height>20</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>
				</control>	
			</focusedlayout>
		</control>
	</include>
	<!--//// END DVD THUMBS VIEW //////////////////////////////////////////////////////////////////////-->

	<!--//// START ALBUM THUMBS VIEW //////////////////////////////////////////////////////////////////-->
	<include name="AlbumThumbsView">	
		<control type="group" id="500">	
	        <defaultcontrol always="true">63</defaultcontrol>
			<visible>Control.IsVisible(63)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ThumbnailViewScrollbar</include>		
			
			<include condition="Skin.String(CommonAlbumThumbsStyle,1) | Skin.String(CommonAlbumThumbsStyle,)">CommonAlbumThumbsStyle1</include>
			<include condition="Skin.String(CommonAlbumThumbsStyle,2)">CommonAlbumThumbsStyle2</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<!--<include condition="!Skin.HasSetting(EnableMusicLibraryClearLogos)">InfoPaneClearLogoMusic</include>-->
				<include>BottomPaneOpenCloseAnim</include>
								
				<control type="group">
					<visible>!Skin.HasSetting(HideAlbumThumbsLabel)</visible>
					
					<control type="label">
						<include>InfoPaneItemTitle</include>
						<label>[B]$INFO[ListItem.Album][/B]</label>
						<!--<animation effect="slide" end="0,-10" time="100" delay="100" condition="!Substring(Control.GetLabel(558),empty.png)">Conditional</animation>-->
						<visible>Container.Content(Albums)</visible>
					</control>
					
					<control type="label">
						<include>InfoPaneItemTitle</include>
						<label>[B]$INFO[ListItem.Title][/B]</label>
						<visible>Container.Content(Songs)</visible>
					</control>
					
					<control type="label">
						<include>InfoPaneItemTitle2</include>
						<label>$INFO[ListItem.Artist]</label>
						<!--<animation effect="fade" start="100" end="0" time="0" condition="!Substring(Control.GetLabel(558),empty.png)">Conditional</animation>-->
					</control>
				</control>
			</control>	

			<include>ViewsDialogPopUpScreenDim</include>
		</control>		
	</include>
	
	<include name="CommonAlbumThumbsStyle1">
		<control type="panel" id="63">
			<viewtype label="31107">Album Thumbnail</viewtype>
			<left>16</left>
			<top>101</top>
			<width>1245</width>
			<height>540</height>
			<pagecontrol>904</pagecontrol>
			<preloaditems>2</preloaditems>
			<scrolltime tween="sine" easing="inout">404</scrolltime>
			<onup>63</onup>
			<ondown>63</ondown>
			<onleft>850</onleft>
			<onright>150</onright>
			<visible>Container.Content(Albums) | Container.Content(Songs) | Container.Content(Addons)</visible>
			<itemlayout height="270" width="249">	
				<control type="image">
					<description>Cover Case</description>
					<left>10</left>
					<top>0</top>
					<width>231</width>
					<height>231</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>10</left>
					<top>0</top>
					<width>231</width>
					<height>231</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Thumb]</texture>
					<aspectratio>stretch</aspectratio>
				</control>										
				<control type="image">
					<description>Default Cover</description>
					<left>10</left>
					<top>0</top>
					<width>231</width>
					<height>231</height>
					<bordersize>45</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>	
				</control>
			</itemlayout>															
			<focusedlayout height="270" width="249">
				<control type="group">
					<include condition="!Skin.HasSetting(DisableThumbnailViewCoverFocusAnim)">ThumbnailViewCoverFocusAnim3</include>
					<control type="image">
						<description>Cover Case</description>
						<left>10</left>
						<top>0</top>
						<width>231</width>
						<height>231</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>10</left>
						<top>0</top>
						<width>231</width>
						<height>231</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Thumb]</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>10</left>
						<top>0</top>
						<width>231</width>
						<height>231</height>
						<bordersize>45</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
				</control>
			</focusedlayout>			
		</control>
	</include>
	
	<include name="CommonAlbumThumbsStyle2">
		<control type="panel" id="63">
			<viewtype label="31107">Album Thumbnail</viewtype>
			<left>20</left>
			<top>101</top>
			<width>1239</width>
			<height>531</height>
			<pagecontrol>904</pagecontrol>
			<preloaditems>2</preloaditems>
			<scrolltime tween="sine" easing="inout">404</scrolltime>
			<onup>63</onup>
			<ondown>63</ondown>
			<onleft>850</onleft>
			<onright>150</onright>
			<visible>Container.Content(Albums) | Container.Content(Songs) | Container.Content(Addons)</visible>
			<itemlayout height="177" width="177">	
				<control type="image">
					<description>Cover Case</description>
					<left>5</left>
					<top>0</top>
					<width>168</width>
					<height>168</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>5</left>
					<top>0</top>
					<width>168</width>
					<height>168</height>
					<bordersize>12</bordersize>
					<texture background="true">$INFO[ListItem.Thumb]</texture>
					<aspectratio>stretch</aspectratio>
				</control>										
				<control type="image">
					<description>Default Cover</description>
					<left>5</left>
					<top>0</top>
					<width>168</width>
					<height>168</height>
					<bordersize>33</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
			</itemlayout>															
			<focusedlayout height="177" width="177">					
				<control type="group">
					<include condition="!Skin.HasSetting(DisableThumbnailViewCoverFocusAnim)">ThumbnailViewCoverFocusAnim2</include>
					<control type="image">
						<description>Cover Case</description>
						<left>5</left>
						<top>0</top>
						<width>168</width>
						<height>168</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>5</left>
						<top>0</top>
						<width>168</width>
						<height>168</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.Thumb]</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>5</left>
						<top>0</top>
						<width>168</width>
						<height>168</height>
						<bordersize>33</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
				</control>
			</focusedlayout>			
		</control>
	</include>
	<!--//// START ALBUM THUMBS VIEW //////////////////////////////////////////////////////////////////-->
	
	<!--//// START 3D WRAP VIEW ////////////////////////////////////////////////////////////////////////////-->	
	<include name="3DWrapPosterCover">
		<left>-72</left>
		<top>78</top>
		<width>144</width>
		<height>205</height>
		<bordertexture border="9">covers/3dwrap-poster-shadow.png</bordertexture>
		<bordersize>10</bordersize>
		<aspectratio scalediffuse="false">stretch</aspectratio>
	</include>
	
	<include name="3DWrapPosterCoverOverlay">
		<left>-62</left>
		<top>88</top>
		<width>124</width>
		<height>185</height>
 		<texture background="true">covers/3dwrap-poster-mask.png</texture>
	</include>
	
	<include name="3DWrapPosterCoverReflection">
		<left>-62</left>
		<top>275</top>
		<width>124</width>
		<height>185</height>
		<aspectratio scalediffuse="false">stretch</aspectratio>
	</include>
	
	<include name="3DWrapPosterCoverReflectionOverlay">
		<left>-62</left>
		<top>275</top>
		<width>124</width>
		<height>185</height>
		<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
		<aspectratio scalediffuse="false">stretch</aspectratio>
	</include>
	
	<include name="3DWrapPosterCoverIcon">
		<left>-62</left>
		<top>88</top>
		<width>124</width>
		<height>185</height>
		<aspectratio>keep</aspectratio>
	</include>
	
	<include name="3DWrapOverlayImage1">
		<left>-55</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<aspectratio>keep</aspectratio>
		<visible>[Container.Content(Movies) + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
	</include>
	
	<include name="3DWrapOverlayImage2">
		<left>30</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<aspectratio>keep</aspectratio>
		<visible>[Container.Content(Movies) + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
	</include>
		
	<include name="3DWrapOverlayUnwatched1">
		<left>-55</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<texture background="true">OverlayClean.png</texture>
		<aspectratio>keep</aspectratio>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapOverlayUnwatched2">
		<left>30</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<texture background="true">OverlayClean.png</texture>
		<aspectratio>keep</aspectratio>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes1A">
		<top>99</top>
		<left>-55</left>
		<width>26</width>
		<font>ListFont3</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes1B">
		<top>99</top>
		<left>-55</left>
		<width>26</width>
		<font>ListFont4</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes2A">
		<top>99</top>
		<left>30</left>
		<width>26</width>
		<font>ListFont3</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes2B">
		<top>99</top>
		<left>30</left>
		<width>26</width>
		<font>ListFont4</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapView">
		<control type="group" id="500">	
		    <defaultcontrol always="true">588</defaultcontrol>
			<visible>Control.IsVisible(588)</visible>
			<include>MediaViewOpenCloseAnim</include>
			
			<control type="image">
				<description>Background Glow</description>
				<left>-50</left>
				<top>500</top>
				<width>1380</width>
				<height>345</height>
				<texture>gui/background-glow.png</texture>
				<animation effect="fade" end="22" condition="true">Conditional</animation>
			</control>

			<control type="image">
				<left>30</left>
				<top>92</top>
				<width>1220</width>
				<height>346</height>
				<texture border="7">panels/content-panel.png</texture>
				<include>PanelFadeAnim</include>
				<include>ControlsOpenCloseAnim</include>
			</control>
			
			<control type="group">
				<left>35</left>
				<top>97</top>
				
				<control type="image">
					<description>Content Background Left</description>
					<width>603</width>
					<height>336</height>
					<texture border="4">panels/panel-content-border2.png</texture>
					<include>ListInfoViewContentBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<description>Content Background Right</description>
					<left>606</left>
					<width>604</width>
					<height>336</height>
					<texture border="4">panels/panel-content-border2.png</texture>
					<include>ListInfoViewContentBackgroundFadeAnim</include>
				</control>
				
				<control type="group">
					<visible>!IsEmpty(ListItem.Title)</visible>
					<include>BackgroundVisibleAnim</include>
					<control type="image">
						<description>Media Info Background Title / Clearlogo</description>
						<left>6</left>
						<top>6</top>
						<width>590</width>
						<height>65</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					</control>
					
					<control type="image">
						<description>Media Info Background</description>
						<left>6</left>
						<top>77</top>
						<width>590</width>
						<height>65</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					</control>
					
					<control type="image">
						<description>Media Info Background</description>
						<left>6</left>
						<top>148</top>
						<width>590</width>
						<height>65</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
						<visible>Container.Content(TVShows) + System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					</control>
					
					<control type="image">
						<description>Description Background</description>
						<left>6</left>
						<top>148</top>
						<width>590</width>
						<height>182</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
						<visible>![Container.Content(TVShows) + System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)]</visible>
					</control>
					
					<control type="image">
						<description>Description Background</description>
						<left>6</left>
						<top>219</top>
						<width>590</width>
						<height>111</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
						<visible>Container.Content(TVShows) + System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					</control>
				</control>
			</control>
			
			<control type="wraplist" id="588">
				<viewtype label="31121">3D Wrap View</viewtype>
				<left>10</left>
				<top>442</top>
				<width>1260</width>
				<height>300</height>	
				<onleft>588</onleft>
				<onright>588</onright>
				<onup>850</onup>
				<ondown>929</ondown>
				<pagecontrol>929</pagecontrol>
				<orientation>horizontal</orientation>
				<focusposition>4</focusposition>	
				<scrolltime>250</scrolltime>		
				<itemlayout width="136">
					<control type="group">
						<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.String(3DWrapMoviesStyle,2)] | [Container.Content(TVShows) + Skin.String(3DWrapTVShowsStyle,2)]</visible>
						<control type="image">
							<description>Cover</description>
							<left>-8</left>
							<width>142</width>
							<height>194</height>
							<texture diffuse="covers/3dwrap-poster-diffuse.png" background="true">$VAR[PosterThumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="4">covers/3dwrap-poster-shadow.png</bordertexture>
							<bordersize>8</bordersize>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Overlay</description>
							<top>8</top>
							<width>126</width>
							<height>178</height>
							<texture background="true">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Reflection</description>
							<top>188</top>
							<width>126</width>
							<height>178</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[PosterThumb]</texture>
							<aspectratio aligny="top">stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Overlay Reflection</description>
							<top>188</top>
							<width>126</width>
							<height>178</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Icon</description>
							<width>126</width>
							<height>178</height>
							<texture background="true">$INFO[ListItem.ActualIcon]</texture>
							<aspectratio>keep</aspectratio>
							<include>InfoPaneLabelFadeAnim</include>
							<visible>IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<left>-4</left>
							<top>4</top>
							<width>134</width>
							<height>186</height>
							<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">black.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>4</bordersize>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
							<animation effect="fade" end="25" condition="true">Conditional</animation>
						</control>
						<control type="image">
							<left>89</left>
							<top>15</top>
							<width>26</width>
							<height>26</height>
							<info>ListItem.Overlay</info>
							<aspectratio>keep</aspectratio>
							<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
						</control>
						<control type="image">
							<description>Watched Partial</description>
							<left>89</left>
							<top>15</top>
							<width>26</width>
							<height>26</height>
							<texture background="true">$VAR[WatchedPartial]</texture>
							<aspectratio>keep</aspectratio>
							<animation effect="fade" end="90" condition="true">Conditional</animation>
							<visible>[Container.Content(Movies) | Container.Content(Sets)] + ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMovies3DWrapOverlay)</visible>
						</control>
						<control type="group">
							<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows)</visible>
							<control type="image">
								<description>Unwatched Overlay</description>
								<left>89</left>
								<top>15</top>
								<width>26</width>
								<height>26</height>
								<texture background="true">OverlayClean.png</texture>
								<aspectratio>keep</aspectratio>
								<animation effect="fade" end="90" condition="true">Conditional</animation>
								<visible>!IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>19</top>
								<left>89</left>
								<width>26</width>
								<font>ListFont3</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<animation effect="fade" end="90" condition="true">Conditional</animation>
								<visible>!IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>19</top>
								<left>89</left>
								<width>26</width>
								<font>ListFont4</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<animation effect="fade" end="90" condition="true">Conditional</animation>
								<visible>IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
						</control>
					</control>
				</itemlayout>	
				<focusedlayout width="180">
					<control type="group">
						<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.String(3DWrapMoviesStyle,2)] | [Container.Content(TVShows) + Skin.String(3DWrapTVShowsStyle,2)]</visible>
						<control type="image">
							<description>Cover</description>
							<left>14</left>
							<width>142</width>
							<height>194</height>
							<texture diffuse="covers/3dwrap-poster-diffuse.png" background="true">$VAR[PosterThumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="4">covers/3dwrap-poster-shadow.png</bordertexture>
							<bordersize>8</bordersize>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
							<include>3DViewFocusAnim</include>
						</control>
						<control type="image">
							<description>Cover Overlay</description>
							<left>22</left>
							<top>8</top>
							<width>126</width>
							<height>178</height>
							<texture background="true">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
							<include>3DViewFocusAnim</include>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Reflection</description>
							<left>22</left>
							<top>188</top>
							<width>126</width>
							<height>178</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[PosterThumb]</texture>
							<aspectratio aligny="top">stretch</aspectratio>
							<include>3DViewFocusAnim</include>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Overlay Reflection</description>
							<left>22</left>
							<top>188</top>
							<width>126</width>
							<height>178</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
							<include>3DViewFocusAnim</include>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Icon</description>
							<left>5</left>
							<width>126</width>
							<height>178</height>
							<texture background="true">$INFO[ListItem.ActualIcon]</texture>
							<aspectratio>keep</aspectratio>
							<animation effect="zoom" end="130" center="8,20" tween="back" easing="out" time="300" delay="100">Focus</animation>
							<animation effect="zoom" start="130" end="100" center="8,20" time="150">UnFocus</animation>
							<visible>IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<left>115</left>
							<top>14</top>
							<width>26</width>
							<height>26</height>
							<info>ListItem.Overlay</info>
							<aspectratio>keep</aspectratio>
							<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
							<include>3DViewFocusAnim</include>
						</control>
						<control type="image">
							<description>Watched Partial</description>
							<left>115</left>
							<top>14</top>
							<width>26</width>
							<height>26</height>
							<texture background="true">$VAR[WatchedPartial]</texture>
							<aspectratio>keep</aspectratio>
							<include>3DViewFocusAnim</include>
							<visible>[Container.Content(Movies) | Container.Content(Sets)] + ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMovies3DWrapOverlay)</visible>
						</control>
						<control type="group">
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !Skin.HasSetting(HideTVShows3DWrapOverlay) + Container.Content(TVShows)</visible>
							<control type="image">
								<description>Unwatched Overlay</description>
								<left>115</left>
								<top>14</top>
								<width>26</width>
								<height>26</height>
								<texture background="true">OverlayClean.png</texture>
								<aspectratio>keep</aspectratio>
								<include>3DViewFocusAnim</include>
								<visible>!IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>18</top>
								<left>115</left>
								<width>26</width>
								<font>ListFont3</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<include>3DViewFocusAnim</include>
								<visible>!IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>18</top>
								<left>115</left>
								<width>26</width>
								<font>ListFont4</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<include>3DViewFocusAnim</include>
								<visible>IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
						</control>
					</control>
				</focusedlayout>					
			</control>
		
			<control type="image">
				<description>Fan Art</description>
				<left>647</left>
				<top>103</top>
				<width>592</width>
				<height>324</height>
				<align>left</align>
				<texture background="true" diffuse="covers/list-info-3-fanart-diffuse.png">$VAR[3DWrapFanart]</texture>
				<aspectratio scalediffuse="false" align="center">scale</aspectratio>
				<fadetime>FanartCrossfadeTime</fadetime>
			</control>
			
			<control type="image">
				<description>Genre Background</description>
				<left>655</left>
				<top>394</top>
				<width>578</width>
				<height>27</height>
				<texture border="8">views/genre-background.png</texture>
				<include>ControlsOpenCloseAnim</include>
				<include>BackgroundVisibleAnim</include>
				<visible>![IsEmpty(ListItem.Genre) + IsEmpty(Window(Home).Property(Set.Movies.Genre))]</visible>
			</control>
			
			<control type="label">
				<description>Genre</description>
				<left>655</left>
				<top>396</top>
				<width>578</width>
				<font>MediaInfoFont3</font>
				<textcolor>WhiteColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>center</align>
				<label>[UPPERCASE]$VAR[MovieGenre][/UPPERCASE]</label>
				<scroll>true</scroll>
				<include>BackgroundVisibleAnim</include>
				<visible>![IsEmpty(ListItem.Genre) + IsEmpty(Window(Home).Property(Set.Movies.Genre))]</visible>
			</control>

			<control type="group">				
				<description>Info Dialog Box Area</description>
				<left>50</left>
				<visible>!Container.OnNext + !Container.OnPrevious + !IsEmpty(ListItem.Title)</visible>
				<include>ControlsOpenCloseAnim</include>
				<include>BackgroundVisibleAnim</include>
				
				<control type="image">
					<top>106</top>
					<width>572</width>
					<height>60</height>
					<align>center</align>
					<texture>$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio>keep</aspectratio>
					<fadetime>400</fadetime>
					<visible>!IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableMoviesClearLogo)</visible>
				</control>
				
				<control type="label">
					<description>Title</description>
					<top>117</top>
					<width>571</width>
					<align>center</align>
					<font>FullMediaInfoTitleFont</font>
					<textcolor>MediaInfoTitleColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
					<scroll>true</scroll>
					<visible>IsEmpty(ListItem.Art(clearlogo)) | Skin.HasSetting(DisableMoviesClearLogo)</visible>
				</control>
				
				<control type="label">
					<top>174</top>
					<width>572</width>
					<height>65</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>MediaInfoFont</font>
					<textcolor>MediaInfoItemColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$LOCALIZE[20457]</label>
					<visible>SubString(ListItem.Path,videodb://movies/sets,left) + !System.HasAddon(script.skin.info.service)</visible>
				</control>
				
				<control type="group">
					<visible>![SubString(ListItem.Path,videodb://movies/sets,left) + !System.HasAddon(script.skin.info.service)]</visible>
					<control type="group">
						<visible>Container.Content(Movies) | Container.Content(Sets)</visible>
						<control type="grouplist">
							<description>Director</description>
							<visible>!SubString(ListItem.Path,videodb://movies/sets,left)</visible>
							<top>184</top>
							<width>400</width>
							<orientation>horizontal</orientation>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[20339]:</label>
							</control>
							<control type="label">
								<width min="0" max="250">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$INFO[ListItem.Director]</label>
							</control>
						</control>
						
						<control type="grouplist">
							<description>Movies</description>
							<visible>SubString(ListItem.Path,videodb://movies/sets,left)</visible>
							<top>184</top>
							<width>400</width>
							<orientation>horizontal</orientation>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[20342]:</label>
							</control>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$INFO[Window(Home).Property(Set.Movies.Count)]</label>
							</control>
						</control>
					
						<control type="grouplist">
							<description>Runtime</description>
							<top>208</top>
							<width>289</width>
							<orientation>horizontal</orientation>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[2050]:</label>
							</control>
							<control type="label">
								<width min="0" max="179">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$VAR[MovieDuration]</label>
							</control>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Year</description>
						<left>162</left>
						<top>184</top>
						<width>410</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[345]:</label>
						</control>
						<control type="label">
							<width min="0" max="179">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Year]</label>
							<visible>!SubString(ListItem.Path,videodb://movies/sets,left)</visible>
						</control>
						<control type="label">
							<width min="0" max="400">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Window(Home).Property(Set.Movies.Years)]</label>
							<visible>SubString(ListItem.Path,videodb://movies/sets,left)</visible>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Rating</description>
						<left>268</left>
						<top>208</top>
						<width>304</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[563]:</label>
						</control>
						<control type="label">
							<width min="0" max="179">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.RatingAndVotes]</label>
							<visible>!SubString(ListItem.Path,videodb://movies/sets,left)</visible>
						</control>
						<control type="label">
							<width min="0" max="179">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Rating]</label>
							<visible>SubString(ListItem.Path,videodb://movies/sets,left)</visible>
						</control>
					</control>
				</control>
				
				<control type="group">
					<visible>Container.Content(TVShows)</visible>
					<control type="grouplist">
						<description>Seasons</description>
						<top>184</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[33054]:</label>
						</control>
						<control type="label">
							<width min="0" max="250">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Property(TotalSeasons)]</label>
						</control>
					</control>
				
					<control type="grouplist">
						<description>Episodes</description>
						<top>208</top>
						<width>289</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20360]:</label>
						</control>
						<control type="label">
							<width min="0" max="179">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Episode]</label>
						</control>
					</control>
				</control>
				
				<control type="group">
					<visible>System.HasAddon(script.tv.show.next.aired) + Container.Content(TVShows) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					<control type="grouplist">
						<description>Latest Episode</description>
						<top>255</top>
						<width>569</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31966]:</label>
						</control>
						<control type="label">
							<width min="0" max="631">auto</width>
							<font>MediaInfoFont2</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.LatestSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.LatestEpisodeNumber),E,.] $INFO[Window(Home).Property(NextAired.LatestTitle)] $INFO[Window(Home).Property(NextAired.LatestDate),(,)]</label>
						</control>
					</control>
				
					<control type="grouplist">
						<description>Next Episode</description>
						<visible>!IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<top>279</top>
						<width>569</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31967]:</label>
						</control>
						<control type="label">
							<width min="0" max="631">auto</width>
							<font>MediaInfoFont2</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.NextSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E,.] $INFO[Window(Home).Property(NextAired.NextTitle)] $INFO[Window(Home).Property(NextAired.NextDate),(,)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Next Episode</description>
						<visible>IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<top>279</top>
						<width>569</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20416]:</label>
						</control>
						<control type="label">
							<width min="0" max="631">auto</width>
							<font>MediaInfoFont2</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Premiered]</label>
						</control>
					</control>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<top>253</top>
					<width>571</width>
					<height>166</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$VAR[MoviePlot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">![[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(DoNotAutoScrollMovies3DWrapPlot)] | [Container.Content(TVShows) + Skin.HasSetting(DoNotAutoScrollTVShows3DWrapPlot)]]</autoscroll>
					<visible>![Container.Content(TVShows) + System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)]</visible>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<top>324</top>
					<width>571</width>
					<height>95</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">![Container.Content(TVShows) + Skin.HasSetting(DoNotAutoScrollTVShows3DWrapPlot)]</autoscroll>
					<visible>Container.Content(TVShows) + System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
			</control>
			
			<control type="group">
				<visible>[[Container.Content(Movies) | Container.Content(Sets)] + [Skin.String(3DWrapMoviesStyle,) | Skin.String(3DWrapMoviesStyle,1)]] | [Container.Content(TVShows) + [Skin.String(3DWrapTVShowsStyle,) | Skin.String(3DWrapTVShowsStyle,1)]]</visible>
				<control type="group" id="5051">
					<top>367</top>
					<camera x="640" y="540" />
					<visible>Control.IsVisible(588) + Container.OnNext</visible>
					<animation effect="slide" end="-70,0" time="250" reversible="false">Hidden</animation>
					<control type="group">
						<left>104</left>
						<visible>Container.OnNext</visible>
						<animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="80" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,16)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-8]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-8).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-8]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-8).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-8).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-8).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-8).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-8).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-8).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-8).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-8).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-8).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-8).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>							
						</control>
					</control>
					<control type="group">
						<left>174</left>
						<animation effect="rotatey" center="150" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,14)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-7).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>
						</control>
					</control>
					<control type="group">
						<left>244</left>
						<animation effect="rotatey" center="220" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,12)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-6).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>				
						</control>
						<control type="group">
							<visible>!StringCompare(ListItem(-6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
							<control type="image">
								<include>3DWrapOverlayUnwatched1</include>
								<visible>!IsEmpty(ListItem(-6).Property(UnWatchedEpisodes))</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<include>3DWrapUnwatchedEpisodes1A</include>
								<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
								<visible>!IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<include>3DWrapUnwatchedEpisodes1B</include>
								<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
								<visible>IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
							</control>		
						</control>
					</control>
					<control type="group">
						<left>314</left>
						<animation effect="rotatey" center="290" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,10)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-5).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>
						</control>
					</control>
					<control type="group">
						<left>384</left>
						<animation effect="rotatey" center="360" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,8)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-4).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>
						</control>
					</control>
					<control type="group">
						<left>454</left>
						<animation effect="rotatey" center="430" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,6)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-3).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>
						</control>
					</control>
					<control type="group">
						<left>524</left>
						<animation effect="rotatey" center="500" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,4)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-2).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>
						</control>
					</control>
					
					<!-- image off screen to stop lag of fading new item -->
					<control type="group">
						<visible>IntegerGreaterThan(Container.NumItems,19)</visible>
						<left>1485</left>
						<control type="image">
							<include>3DWrapPosterCover</include>
							<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster8]</texture>
						</control>
					</control>

					<control type="group">
						<left>1247</left>
						<visible>!Container.OnNext</visible>
						<animation effect="fade" end="100" delay="0" time="250" reversible="false">Visible</animation>
						<animation effect="rotatey" center="1270" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,13)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(7).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>1177</left>
						<animation effect="rotatey" center="1200" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,11)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(6).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(6).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>1107</left>
						<animation effect="rotatey" center="1130" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,9)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(5).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>1037</left>
						<animation effect="rotatey" center="1060" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,7)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(4).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>967</left>
						<animation effect="rotatey" center="990" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,5)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(3).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>897</left>
						<animation effect="rotatey" center="920" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,3)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(2).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>827</left>
						<animation effect="rotatey" center="850" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,1)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster1]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster1]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(1).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(1).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(1).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					
					<control type="group">
						<visible>Container.OnNext</visible>
						<animation effect="slide" end="-120,0" time="350" reversible="false">Hidden</animation>
						<control type="group">
							<left>757</left>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="780" end="-30" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="780" start="60" end="60" time="0" condition="true">Conditional</animation>
							<control type="group">
								<control type="image">							
									<include>3DWrapPosterCover</include>
									<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster0]</texture>
								</control>
								<control type="image">
									<description>Cover Overlay</description>
									<include>3DWrapPosterCoverOverlay</include>
									<visible>!IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<include>3DWrapPosterCoverReflection</include>
									<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster0]</texture>
								</control>
								<control type="image">
									<description>Cover Reflection Overlay</description>
									<include>3DWrapPosterCoverReflectionOverlay</include>
									<visible>!IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<description>Cover Icon</description>
									<include>3DWrapPosterCoverIcon</include>
									<texture background="true">$INFO[ListItem.ActualIcon]</texture>
									<visible>IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<info>ListItem.Overlay</info>
									<include>3DWrapOverlayImage2</include>
								</control>
								<control type="group">
									<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
									<control type="image">
										<include>3DWrapOverlayUnwatched2</include>
										<visible>!IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2A</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>!IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2B</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
								</control>
							</control>
						</control>
						<control type="group">
							<left>717</left>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="694" end="-60" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
							<control type="group">
								<visible>IntegerGreaterThan(Container.NumItems,2)</visible>
								<control type="image">
									<include>3DWrapPosterCover</include>
									<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-1]</texture>
								</control>
								<control type="image">
									<description>Cover Overlay</description>
									<include>3DWrapPosterCoverOverlay</include>
									<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
								</control>
								<control type="image">
									<include>3DWrapPosterCoverReflection</include>
									<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-1]</texture>
								</control>
								<control type="image">
									<description>Cover Reflection Overlay</description>
									<include>3DWrapPosterCoverReflectionOverlay</include>
									<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
								</control>
								<control type="image">
									<description>Cover Icon</description>
									<include>3DWrapPosterCoverIcon</include>
									<texture background="true">$INFO[ListItem(-1).ActualIcon]</texture>
									<visible>IsEmpty(ListItem(-1).Thumb)</visible>
								</control>
								<control type="image">
									<info>ListItem(-1).Overlay</info>
									<include>3DWrapOverlayImage1</include>
								</control>
								<control type="group">
									<visible>!StringCompare(ListItem(-1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
									<control type="image">
										<include>3DWrapOverlayUnwatched1</include>
										<visible>!IsEmpty(ListItem(-1).Property(UnWatchedEpisodes))</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes1A</include>
										<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
										<visible>!IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes1B</include>
										<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
										<visible>IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
									</control>
								</control>
							</control>
						</control>
					</control>
				</control> 
				
				<control type="group" id="5052">
					<top>367</top>
					<camera x="640" y="540" />
					<visible>Control.IsVisible(588) + Container.OnPrevious</visible>
					<animation effect="slide" end="70,0" time="250" reversible="false">Hidden</animation>
					<control type="group">
						<left>1177</left>
						<visible>Container.OnPrevious</visible>
						<animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="1200" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,15)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster8]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(8).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster8]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(8).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(8).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(8).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(8).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(8).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(8).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(8).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(8).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(8).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(8).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>1107</left>
						<animation effect="rotatey" center="1130" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,13)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(7).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>1037</left>
						<animation effect="rotatey" center="1060" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,11)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(6).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(6).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>967</left>
						<animation effect="rotatey" center="990" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,9)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(5).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>897</left>
						<animation effect="rotatey" center="920" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,7)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(4).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>827</left>
						<animation effect="rotatey" center="850" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,5)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(3).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>757</left>
						<animation effect="rotatey" center="780" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,3)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(2).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					
					<!-- image off screen to stop lag of fading new item -->
					<control type="group">
						<left>-600</left>
						<visible>IntegerGreaterThan(Container.NumItems,20)</visible>
						<control type="image">
							<include>3DWrapPosterCover</include>
							<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-8]</texture>
						</control>
					</control>
					
					<control type="group">
						<left>34</left>
						<visible>!Container.OnPrevious</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="10" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,14)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-7).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>104</left>
						<animation effect="rotatey" center="80" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,12)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-6).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-6).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>174</left>
						<animation effect="rotatey" center="150" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,10)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-5).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>244</left>
						<animation effect="rotatey" center="220" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,8)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-4).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>314</left>
						<animation effect="rotatey" center="290" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,6)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-3).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>384</left>
						<animation effect="rotatey" center="360" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,4)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-2).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>454</left>
						<animation effect="rotatey" center="430" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,2)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-1]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-1]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-1).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-1).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-1).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>

					<control type="group">
						<visible>Container.OnPrevious</visible>
						<animation effect="slide" end="120,0" time="350" reversible="false">Hidden</animation>
						<control type="group">
							<left>524</left>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="500" end="60" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="500" start="-60" end="-60" time="0" condition="true">Conditional</animation>
							<control type="group">
								<control type="image">
									<include>3DWrapPosterCover</include>
									<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster0]</texture>						
								</control>
								<control type="image">
									<description>Cover Overlay</description>
									<include>3DWrapPosterCoverOverlay</include>
									<visible>!IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<include>3DWrapPosterCoverReflection</include>
									<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster0]</texture>
								</control>
								<control type="image">
									<description>Cover Reflection Overlay</description>
									<include>3DWrapPosterCoverReflectionOverlay</include>
									<visible>!IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<description>Cover Icon</description>
									<include>3DWrapPosterCoverIcon</include>
									<texture background="true">$INFO[ListItem.ActualIcon]</texture>
									<visible>IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<info>ListItem.Overlay</info>
									<include>3DWrapOverlayImage2</include>
								</control>
								<control type="group">
									<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
									<control type="image">
										<include>3DWrapOverlayUnwatched2</include>
										<visible>!IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2A</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>!IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2B</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
								</control>
							</control>
						</control>
						<control type="group">
							<left>564</left>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="587" end="60" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
							<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,1)</visible>
								<control type="image">
									<include>3DWrapPosterCover</include>
									<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster1]</texture>
								</control>
								<control type="image">
									<description>Cover Overlay</description>
									<include>3DWrapPosterCoverOverlay</include>
									<visible>!IsEmpty(ListItem(1).Thumb)</visible>
								</control>
								<control type="image">
									<include>3DWrapPosterCoverReflection</include>
									<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster1]</texture>
								</control>
								<control type="image">
									<description>Cover Reflection Overlay</description>
									<include>3DWrapPosterCoverReflectionOverlay</include>
									<visible>!IsEmpty(ListItem(1).Thumb)</visible>
								</control>
								<control type="image">
									<description>Cover Icon</description>
									<include>3DWrapPosterCoverIcon</include>
									<texture background="true">$INFO[ListItem(1).ActualIcon]</texture>
									<visible>IsEmpty(ListItem(1).Thumb)</visible>
								</control>
								<control type="image">
									<info>ListItem(1).Overlay</info>
									<include>3DWrapOverlayImage2</include>
								</control>
								<control type="group">
									<visible>!StringCompare(ListItem(1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
									<control type="image">
										<include>3DWrapOverlayUnwatched2</include>
										<visible>!IsEmpty(ListItem(1).Property(UnWatchedEpisodes))</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2A</include>
										<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
										<visible>!IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2B</include>
										<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
										<visible>IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
									</control>
								</control>
							</control>
						</control>
					</control>
				</control>
				
				<control type="group" id="5050">
					<top>367</top>
					<animation effect="fade" time="500">WindowOpen</animation>
					<animation effect="fade" time="200">WindowClose</animation>
					<visible>Control.IsVisible(588) + ![Control.IsVisible(5051) | Control.IsVisible(5052)]</visible>			
					<camera x="640" y="540" />
					<control type="group">
						<left>104</left>
						<animation effect="rotatey" center="80" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,14)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-7).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>174</left>
						<animation effect="rotatey" center="150" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,12)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-6).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-6).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>244</left>
						<animation effect="rotatey" center="220" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,10)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-5).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>314</left>
						<animation effect="rotatey" center="290" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,8)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-4).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>384</left>
						<animation effect="rotatey" center="360" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,6)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-3).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>454</left>
						<animation effect="rotatey" center="430" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,4)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-2).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>524</left>
						<animation effect="rotatey" center="500" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,2)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-1]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-1]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-1).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-1).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-1).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>1177</left>
						<animation effect="rotatey" center="1200" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,13)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(7).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>1107</left>
						<animation effect="rotatey" center="1130" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,11)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(6).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(6).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>1037</left>
						<animation effect="rotatey" center="1060" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,9)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(5).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>967</left>
						<animation effect="rotatey" center="990" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,7)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(4).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>897</left>
						<animation effect="rotatey" center="920" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,5)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(3).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>827</left>
						<animation effect="rotatey" center="850" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,3)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(2).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>757</left>
						<animation effect="rotatey" center="780" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,1)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster1]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster1]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(1).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(1).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(1).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>			
				</control>		
				
				<control type="group">
					<visible>Control.IsVisible(588) + ![Control.IsVisible(5051) | Control.IsVisible(5052)]</visible>
					<left>543</left>
					<top>425</top>
					<animation effect="zoom" start="100" end="70" center="643,495" time="300" tween="circle" easing="inout" condition="Control.HasFocus(929) | ControlGroup(850).HasFocus">Conditional</animation>
					<animation effect="zoom" start="75" end="100" center="643,470" easing="inout" time="300">Visible</animation>
					<control type="group">
						<control type="image">
							<top>15</top>
							<width>195</width>
							<height>260</height>
							<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster0]</texture>
							<bordertexture border="4">covers/3dwrap-poster-shadow.png</bordertexture>
							<bordersize>10</bordersize>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Overlay</description>
							<left>10</left>
							<top>25</top>
							<width>175</width>
							<height>240</height>
							<texture background="true">covers/3dwrap-poster-mask.png</texture>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<left>10</left>
							<top>267</top>
							<width>175</width>
							<height>240</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster0]</texture>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Reflection Overlay</description>
							<left>10</left>
							<top>267</top>
							<width>175</width>
							<height>240</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Icon</description>
							<left>10</left>
							<top>25</top>
							<width>175</width>
							<height>240</height>
							<aspectratio>keep</aspectratio>
							<texture background="true">$INFO[ListItem.ActualIcon]</texture>
							<visible>IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<left>137</left>
							<top>35</top>
							<width>35</width>
							<height>35</height>
							<info>ListItem.Overlay</info>
							<aspectratio>keep</aspectratio>
							<visible>!IsEmpty(ListItem.Overlay) + [[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]]</visible>
						</control>
						<control type="group">
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows)</visible>
							<control type="image">
								<description>Unwatched Overlay</description>
								<left>137</left>
								<top>35</top>
								<width>35</width>
								<height>35</height>
								<texture background="true">OverlayClean.png</texture>
								<aspectratio>keep</aspectratio>
								<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>40</top>
								<left>137</left>
								<width>35</width>
								<font>WideListFont3</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<animation effect="fade" end="85" condition="true">Conditional</animation>
								<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>42</top>
								<left>137</left>
								<width>35</width>
								<font>ListFont5</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<animation effect="fade" end="85" condition="true">Conditional</animation>
								<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
						</control>
					</control>
				</control>		
			</control>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>
				<include>InfoPaneMediaDetails</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>
			
			<control type="group">
				<animation effect="fade" start="100" end="0" time="200" condition="!Control.HasFocus(929)">Conditional</animation>
				<animation effect="zoom" start="60" end="100" time="300" center="auto" easing="out" tween="back" condition="Control.HasFocus(929)">Conditional</animation>
				<control type="image">
					<left>550</left>
					<top>680</top>
					<width>180</width>
					<height>14</height>
					<texture border="4">controls/scrollbar-background.png</texture>
				</control>
				
				<control type="scrollbar" id="929">
					<left>550</left>
					<top>680</top>
					<height>14</height>
					<width>180</width>
					<orientation>horizontal</orientation>
					<texturesliderbar border="2">controls/scrollbar-slider-horz-nofocus.png</texturesliderbar>
					<texturesliderbarfocus border="2">controls/scrollbar-slider-horz-focus.png</texturesliderbarfocus>
					<textureslidernib>-</textureslidernib>
					<textureslidernibfocus>-</textureslidernibfocus>
					<onup>588</onup>
					<ondown condition="[Container.Content(Movies) | Container.Content(TVShows)] + !IsEmpty(ListItem.Trailer)">PlayMedia($ESCINFO[ListItem.Trailer],noresume)</ondown>
					<ondown condition="[Container.Content(Movies) | Container.Content(TVShows)] + IsEmpty(ListItem.Trailer)">ActivateWindow(videos,$INFO[ListItem.Label,plugin://plugin.video.youtube/kodion/search/query/?q=, trailer],return)</ondown>
					<ondown condition="Container.Content(Episodes) + IsEmpty(ListItem.Trailer)">ActivateWindow(videos,plugin://plugin.video.youtube/kodion/search/query/?q=$INFO[ListItem.TVShowTitle] $INFO[ListItem.Label] trailer],return)</ondown>
				</control>
			</control>

			<include>ViewsDialogPopUpScreenDim</include>
		</control>			
	</include>
	<!--//// END 3D WRAP VIEW ////////////////////////////////////////////////////////////////////////////-->
</includes>